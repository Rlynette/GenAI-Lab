
# Jac and Jaseci: Python Supercharged for AI Development at Scale (https://www.jac-lang.org/)
https://www.jac-lang.org#learn | Get Started

# Tour of Jac/Jaseci (https://www.jac-lang.org/learn/introduction/)
https://www.jac-lang.org/learn/introduction#python-superset-philosophy-all-of-python-plus-more | Python Superset Philosophy: All of Python Plus More
https://www.jac-lang.org/learn/introduction#programming-abstractions-for-ai | Programming Abstractions for AI
https://www.jac-lang.org/learn/introduction#beyond-oop-an-agentic-programming-model | Beyond OOP: An Agentic Programming Model
https://www.jac-lang.org/learn/introduction#zero-to-infinite-scale-without-any-code-changes | Zero to Infinite Scale without any Code Changes
https://www.jac-lang.org/learn/introduction#better-organized-and-well-typed-codebases | Better Organized and Well Typed Codebases
https://www.jac-lang.org/learn/introduction#next-steps | Next Steps

# Roadmap (https://www.jac-lang.org/communityhub/roadmap/)
https://www.jac-lang.org/communityhub/roadmap#jac-and-jaseci-development-roadmap | Skip to content
https://www.jac-lang.org/communityhub/roadmap#jac-the-language | #
https://www.jac-lang.org/communityhub/roadmap#jaseci-the-runtime | #
https://www.jac-lang.org/communityhub/roadmap#jac-and-jaseci-research | #

# Getting started (https://www.jac-lang.org/learn/getting_started/)
https://www.jac-lang.org/learn/getting_started#installing-the-vs-code-extention | Installing the VS Code Extention
https://www.jac-lang.org/learn/getting_started#next-steps | Next Steps
https://www.jac-lang.org/learn/getting_started#installation | Installation#

# Introduction (https://www.jac-lang.org/jac_book/)
https://www.jac-lang.org/jac_book#what-makes-jac-special | What Makes Jac Special?
https://www.jac-lang.org/jac_book#book-structure | Book Structure
https://www.jac-lang.org/jac_book#part-i-jac-fundamentals | Part I: Jac Fundamentals
https://www.jac-lang.org/jac_book#chapter-1-introduction-to-jac | Chapter 1: Introduction to Jac
https://www.jac-lang.org/jac_book#chapter-2-syntax-and-development-environment | Chapter 2: Syntax and Development Environment
https://www.jac-lang.org/jac_book#chapter-3-variables-types-and-control-flow | Chapter 3: Variables, Types, and Control Flow
https://www.jac-lang.org/jac_book#chapter-4-functions-ai-functions-and-decorators | Chapter 4: Functions, AI Functions, and Decorators
https://www.jac-lang.org/jac_book#chapter-5-advanced-ai-operations | Chapter 5: Advanced AI Operations
https://www.jac-lang.org/jac_book#chapter-6-imports-system-and-file-operations | Chapter 6: Imports System and File Operations
https://www.jac-lang.org/jac_book#part-ii-enhanced-object-oriented-programming | Part II: Enhanced Object-Oriented Programming
https://www.jac-lang.org/jac_book#chapter-7-enhanced-oop-objects-and-classes | Chapter 7: Enhanced OOP - Objects and Classes
https://www.jac-lang.org/jac_book#part-iii-object-spatial-programming-osp | Part III: Object-Spatial Programming (OSP)
https://www.jac-lang.org/jac_book#chapter-8-osp-introduction-and-paradigm-shift | Chapter 8: OSP Introduction and Paradigm Shift
https://www.jac-lang.org/jac_book#chapter-9-nodes-and-edges | Chapter 9: Nodes and Edges
https://www.jac-lang.org/jac_book#chapter-10-walkers-and-abilities | Chapter 10: Walkers and Abilities
https://www.jac-lang.org/jac_book#chapter-11-advanced-object-spatial-operations | Chapter 11: Advanced Object Spatial Operations
https://www.jac-lang.org/jac_book#part-iv-scale-agnostic-cloud-applications | Part IV: Scale-Agnostic Cloud Applications
https://www.jac-lang.org/jac_book#chapter-12-walkers-as-api-endpoints | Chapter 12: Walkers as API Endpoints
https://www.jac-lang.org/jac_book#chapter-13-persistence-and-the-root-node | Chapter 13: Persistence and the Root Node
https://www.jac-lang.org/jac_book#chapter-14-multi-user-architecture-and-permissions | Chapter 14: Multi-User Architecture and Permissions
https://www.jac-lang.org/jac_book#chapter-15-advanced-jac-cloud-features | Chapter 15: Advanced Jac Cloud Features
https://www.jac-lang.org/jac_book#part-v-advanced-topics-and-best-practices | Part V: Advanced Topics and Best Practices
https://www.jac-lang.org/jac_book#chapter-16-type-system-deep-dive | Chapter 16: Type System Deep Dive
https://www.jac-lang.org/jac_book#chapter-17-testing-and-debugging | Chapter 17: Testing and Debugging
https://www.jac-lang.org/jac_book#chapter-18-deployment-strategies | Chapter 18: Deployment Strategies
https://www.jac-lang.org/jac_book#chapter-19-performance-optimization | Chapter 19: Performance Optimization
https://www.jac-lang.org/jac_book#chapter-20-python-to-jac-migration | Chapter 20: Python to Jac Migration
https://www.jac-lang.org/jac_book#learning-paths | Learning Paths
https://www.jac-lang.org/jac_book#what-youll-build | What You'll Build
https://www.jac-lang.org/jac_book#prerequisites | Prerequisites
https://www.jac-lang.org/jac_book#getting-help | Getting Help
https://www.jac-lang.org/jac_book#book-features | Book Features
https://www.jac-lang.org/jac_book#the-jac-programming-language-book | The Jac Programming Language Book#

# Tutorial (https://www.jac-lang.org/learn/examples/littleX/tutorial/)
https://www.jac-lang.org/learn/examples/littleX/tutorial#tutorial | Skip to content
https://www.jac-lang.org/learn/examples/littleX/tutorial#build-your-first-social-media-app-with-jaseci | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#what-youll-learn | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#what-youll-build-littlex | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#complete-code-preview | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-1 | 1
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-2 | 2
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-3 | 3
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-4 | 4
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-5 | 5
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-6 | 6
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-7 | 7
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-8 | 8
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-9 | 9
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-10 | 10
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-11 | 11
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-12 | 12
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-13 | 13
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-14 | 14
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-15 | 15
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-16 | 16
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-17 | 17
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-18 | 18
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-19 | 19
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-20 | 20
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-21 | 21
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-22 | 22
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-23 | 23
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-24 | 24
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-25 | 25
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-26 | 26
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-27 | 27
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-28 | 28
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-29 | 29
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-30 | 30
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-31 | 31
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-32 | 32
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-33 | 33
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-34 | 34
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-35 | 35
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-36 | 36
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-37 | 37
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-38 | 38
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-39 | 39
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-40 | 40
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-41 | 41
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-42 | 42
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-43 | 43
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-44 | 44
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-45 | 45
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-46 | 46
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-47 | 47
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-48 | 48
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-49 | 49
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-50 | 50
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-51 | 51
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-52 | 52
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-53 | 53
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-54 | 54
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-55 | 55
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-56 | 56
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-57 | 57
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-58 | 58
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-59 | 59
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-60 | 60
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-61 | 61
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-62 | 62
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-63 | 63
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-64 | 64
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-65 | 65
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-66 | 66
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-67 | 67
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-68 | 68
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-69 | 69
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-70 | 70
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-71 | 71
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-72 | 72
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-73 | 73
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-74 | 74
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-75 | 75
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-76 | 76
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-77 | 77
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-78 | 78
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-79 | 79
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-80 | 80
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-81 | 81
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-82 | 82
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-83 | 83
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-84 | 84
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-85 | 85
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-86 | 86
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-87 | 87
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-88 | 88
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-89 | 89
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-90 | 90
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-91 | 91
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-92 | 92
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-93 | 93
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-94 | 94
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-95 | 95
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-96 | 96
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-97 | 97
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-98 | 98
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-99 | 99
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-100 | 100
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-101 | 101
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-102 | 102
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-103 | 103
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-104 | 104
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-105 | 105
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-106 | 106
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-107 | 107
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-108 | 108
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-109 | 109
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-110 | 110
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-111 | 111
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-112 | 112
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-113 | 113
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-114 | 114
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-115 | 115
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-116 | 116
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-117 | 117
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-118 | 118
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-0-119 | 119
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-1 | 1
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-2 | 2
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-3 | 3
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-4 | 4
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-5 | 5
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-6 | 6
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-7 | 7
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-8 | 8
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-9 | 9
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-10 | 10
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-11 | 11
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-12 | 12
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-13 | 13
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-14 | 14
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-15 | 15
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-16 | 16
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-17 | 17
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-18 | 18
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-19 | 19
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-20 | 20
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-21 | 21
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-22 | 22
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-23 | 23
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-24 | 24
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-25 | 25
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-26 | 26
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-27 | 27
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-28 | 28
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-29 | 29
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-30 | 30
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-31 | 31
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-32 | 32
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-33 | 33
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-34 | 34
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-35 | 35
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-36 | 36
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-37 | 37
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-38 | 38
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-39 | 39
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-40 | 40
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-41 | 41
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-42 | 42
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-43 | 43
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-44 | 44
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-45 | 45
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-46 | 46
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-47 | 47
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-48 | 48
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-49 | 49
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-50 | 50
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-51 | 51
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-52 | 52
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-53 | 53
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-54 | 54
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-55 | 55
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-56 | 56
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-57 | 57
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-58 | 58
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-59 | 59
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-60 | 60
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-61 | 61
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-62 | 62
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-63 | 63
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-64 | 64
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-65 | 65
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-66 | 66
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-67 | 67
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-68 | 68
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-69 | 69
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-70 | 70
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-71 | 71
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-72 | 72
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-73 | 73
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-74 | 74
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-75 | 75
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-76 | 76
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-77 | 77
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-78 | 78
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-79 | 79
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-80 | 80
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-81 | 81
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-82 | 82
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-83 | 83
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-84 | 84
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-85 | 85
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-86 | 86
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-87 | 87
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-88 | 88
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-89 | 89
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-90 | 90
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-91 | 91
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-92 | 92
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-93 | 93
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-94 | 94
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-95 | 95
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-96 | 96
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-97 | 97
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-98 | 98
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-99 | 99
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-100 | 100
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-101 | 101
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-102 | 102
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-103 | 103
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-104 | 104
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-105 | 105
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-106 | 106
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-107 | 107
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-108 | 108
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-109 | 109
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-110 | 110
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-111 | 111
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-112 | 112
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-113 | 113
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-114 | 114
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-115 | 115
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-116 | 116
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-117 | 117
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-118 | 118
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-1-119 | 119
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-1 | 1
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-2 | 2
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-3 | 3
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-4 | 4
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-5 | 5
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-6 | 6
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-7 | 7
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-8 | 8
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-9 | 9
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-10 | 10
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-11 | 11
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-12 | 12
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-13 | 13
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-14 | 14
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-15 | 15
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-16 | 16
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-17 | 17
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-18 | 18
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-19 | 19
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-20 | 20
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-21 | 21
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-22 | 22
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-23 | 23
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-24 | 24
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-25 | 25
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-26 | 26
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-27 | 27
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-28 | 28
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-29 | 29
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-30 | 30
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-31 | 31
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-32 | 32
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-33 | 33
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-34 | 34
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-35 | 35
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-36 | 36
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-37 | 37
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-38 | 38
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-39 | 39
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-40 | 40
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-41 | 41
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-42 | 42
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-43 | 43
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-44 | 44
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-45 | 45
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-46 | 46
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-47 | 47
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-48 | 48
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-49 | 49
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-50 | 50
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-51 | 51
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-52 | 52
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-53 | 53
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-54 | 54
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-55 | 55
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-56 | 56
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-57 | 57
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-58 | 58
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-59 | 59
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-60 | 60
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-61 | 61
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-62 | 62
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-63 | 63
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-64 | 64
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-65 | 65
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-66 | 66
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-67 | 67
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-68 | 68
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-69 | 69
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-70 | 70
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-71 | 71
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-72 | 72
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-73 | 73
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-74 | 74
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-75 | 75
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-76 | 76
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-77 | 77
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-78 | 78
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-79 | 79
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-80 | 80
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-81 | 81
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-82 | 82
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-83 | 83
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-84 | 84
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-85 | 85
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-86 | 86
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-87 | 87
https://www.jac-lang.org/learn/examples/littleX/tutorial#__codelineno-2-88 | 88
https://www.jac-lang.org/learn/examples/littleX/tutorial#before-you-start | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#step-1-install-jaseci | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#step-2-get-the-code | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#understanding-jasecis-building-blocks | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#file-structure-three-files-one-application | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#littlexjac-what-your-app-has | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#littleximpljac-how-your-app-works | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#littlextestjac-proving-it-works | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#running-your-code | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#1-nodes-store-your-data | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#2-edges-connect-your-data | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#3-walkers-make-things-happen | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#build-littlex-step-by-step | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#step-3-create-user-profiles | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#step-4-post-messages | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#step-5-follow-other-users | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#step-6-view-your-feed | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#step-7-run-your-app | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#start-the-backend | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#start-the-frontend | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#try-your-app | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#key-code-components | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#profile-node | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#tweet-node | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#follow-implementation | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#try-these-extensions | #
https://www.jac-lang.org/learn/examples/littleX/tutorial#what-youve-accomplished | #

# RPG game with AI Genarated Maps (https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game/)
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#overview | Overview
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#prerequisites | Prerequisites
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#implementation-steps | Implementation Steps
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#step-1-define-game-data-structures | Step 1: Define Game Data Structures
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#basic-position-and-wall-objects | Basic Position and Wall Objects
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#game-configuration-objects | Game Configuration Objects
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#step-2-implement-ai-powered-generation-methods | Step 2: Implement AI-Powered Generation Methods
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#ai-method-implementation | AI Method Implementation
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#step-3-build-the-level-generation-logic | Step 3: Build the Level Generation Logic
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#generation-flow | Generation Flow
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#step-4-convert-ai-output-to-game-format | Step 4: Convert AI Output to Game Format
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#map-conversion-process | Map Conversion Process
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#step-5-test-the-ai-level-generator | Step 5: Test the AI Level Generator
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#running-the-generator | Running the Generator
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#summary | Summary
https://www.jac-lang.org/learn/examples/mtp_examples/rpg_game#tutorial-building-an-ai-powered-rpg-level-generator | Tutorial: Building an AI-Powered RPG Level Generator#

# Introduction to Jac Cloud (https://www.jac-lang.org/learn/jac-cloud/introduction/)
https://www.jac-lang.org/learn/jac-cloud/introduction#what-is-jac-cloud | What is Jac Cloud?
https://www.jac-lang.org/learn/jac-cloud/introduction#key-features-at-a-glance | Key Features at a Glance
https://www.jac-lang.org/learn/jac-cloud/introduction#instant-api-generation | Instant API Generation
https://www.jac-lang.org/learn/jac-cloud/introduction#authentication-authorization | Authentication & Authorization
https://www.jac-lang.org/learn/jac-cloud/introduction#real-time-communication | Real-time Communication
https://www.jac-lang.org/learn/jac-cloud/introduction#task-scheduling | Task Scheduling
https://www.jac-lang.org/learn/jac-cloud/introduction#production-ready-features | Production-Ready Features
https://www.jac-lang.org/learn/jac-cloud/introduction#cloud-integration | Cloud Integration
https://www.jac-lang.org/learn/jac-cloud/introduction#quick-start-5-minute-setup | Quick Start (5-Minute Setup)
https://www.jac-lang.org/learn/jac-cloud/introduction#how-jac-cloud-works | How Jac Cloud Works
https://www.jac-lang.org/learn/jac-cloud/introduction#perfect-use-cases-for-beginners | Perfect Use Cases for Beginners
https://www.jac-lang.org/learn/jac-cloud/introduction#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/introduction#introduction-to-jac-cloud | Introduction to Jac Cloud#

# Learn Jac in 5 Minutes (https://www.jac-lang.org/learn/jac_in_a_flash/)
https://www.jac-lang.org/learn/jac_in_a_flash#step-0-the-python-version | Step 0 – The Python version
https://www.jac-lang.org/learn/jac_in_a_flash#step-1-a-direct-jac-translation | Step 1 – A direct Jac translation
https://www.jac-lang.org/learn/jac_in_a_flash#step-2-declaring-fields-with-has | Step 2 – Declaring fields with has
https://www.jac-lang.org/learn/jac_in_a_flash#step-3-separating-implementation-with-impl | Step 3 – Separating implementation with impl
https://www.jac-lang.org/learn/jac_in_a_flash#step-4-walking-the-graph | Step 4 – Walking the graph
https://www.jac-lang.org/learn/jac_in_a_flash#step-5-scale-agnostic-approach | Step 5 – Scale Agnostic Approach
https://www.jac-lang.org/learn/jac_in_a_flash#step-6-ai-enhanced-gameplay-with-byllm | Step 6 – AI-Enhanced Gameplay with byLLM
https://www.jac-lang.org/learn/jac_in_a_flash#jac-in-a-flash | Jac in a Flash#

# Installation (https://www.jac-lang.org/learn/installation/)
https://www.jac-lang.org/learn/installation#installation-and-ide-setup | Installation and IDE Setup
https://www.jac-lang.org/learn/installation#system-requirements | System Requirements
https://www.jac-lang.org/learn/installation#installing-jac | Installing Jac
https://www.jac-lang.org/learn/installation#quick-install-via-pip | Quick Install via pip
https://www.jac-lang.org/learn/installation#via-virtual-environment-recommended | Via Virtual Environment (Recommended)
https://www.jac-lang.org/learn/installation#vs-code-extension | VS Code Extension
https://www.jac-lang.org/learn/installation#basic-cli-commands | Basic CLI Commands
https://www.jac-lang.org/learn/installation#hello-world-in-jac | Hello World in Jac
https://www.jac-lang.org/learn/installation#entry-blocks-and-basic-execution | Entry Blocks and Basic Execution
https://www.jac-lang.org/learn/installation#single-entry-blocks | Single Entry Blocks
https://www.jac-lang.org/learn/installation#multiple-entry-blocks | Multiple Entry Blocks
https://www.jac-lang.org/learn/installation#next-steps | Next Steps
https://www.jac-lang.org/learn/installation#getting-started-with-jac-installation-setup-and-your-first-program | Getting Started with Jac: Installation, Setup, and Your First Program#

# Jac Playground (https://www.jac-lang.org/learn/jac_playground/)
https://www.jac-lang.org/learn/jac_playground#getting-started | Getting Started
https://www.jac-lang.org/learn/jac_playground#how-to-use | How to Use
https://www.jac-lang.org/learn/jac_playground#debug-mode | Debug Mode
https://www.jac-lang.org/learn/jac_playground#jaclang-graph-visualizer | Jaclang Graph Visualizer
https://www.jac-lang.org/learn/jac_playground#jac-playground-jaclang-graph-visualizer-demo | Jac Playground - Jaclang Graph Visualizer Demo
https://www.jac-lang.org/learn/jac_playground#using-debug-mode-effectively | Using Debug Mode Effectively
https://www.jac-lang.org/learn/jac_playground#interface-overview | Interface Overview
https://www.jac-lang.org/learn/jac_playground#main-editor | Main Editor
https://www.jac-lang.org/learn/jac_playground#control-panel | Control Panel
https://www.jac-lang.org/learn/jac_playground#debug-controls | Debug Controls
https://www.jac-lang.org/learn/jac_playground#output-panel | Output Panel
https://www.jac-lang.org/learn/jac_playground#example-library | Example Library
https://www.jac-lang.org/learn/jac_playground#basic-examples | Basic Examples
https://www.jac-lang.org/learn/jac_playground#object-spatial-programming | Object Spatial Programming
https://www.jac-lang.org/learn/jac_playground#tips-for-new-users | Tips for New Users
https://www.jac-lang.org/learn/jac_playground#example-categories-explained | Example Categories Explained
https://www.jac-lang.org/learn/jac_playground#basic-programming-concepts | Basic Programming Concepts
https://www.jac-lang.org/learn/jac_playground#object-spatial-programming_1 | Object Spatial Programming
https://www.jac-lang.org/learn/jac_playground#getting-help | Getting Help
https://www.jac-lang.org/learn/jac_playground#jac-playground-guide | Jac Playground Guide#

# Build an AI (https://www.jac-lang.org/learn/examples/rag_chatbot/Overview/)
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#what-youll-build | What You'll Build
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#what-youll-learn | What You'll Learn
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#technologies-well-use | Technologies We'll Use
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#project-structure | Project Structure
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-1-set-up-your-environment | Step 1: Set Up Your Environment
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-2-build-the-document-processing-engine | Step 2: Build the Document Processing Engine
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-3-build-the-tool-server | Step 3: Build the Tool Server
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-4-create-the-tool-interface | Step 4: Create the Tool Interface
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-5-create-the-main-application-with-object-spatial-programming | Step 5: Create the Main Application with Object Spatial Programming
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-6-build-the-web-interface | Step 6: Build the Web Interface
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-7-run-your-application | Step 7: Run Your Application
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#step-8-test-your-chatbot | Step 8: Test Your Chatbot
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#understanding-the-architecture | Understanding the Architecture
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#what-youve-accomplished | What You've Accomplished
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#extending-your-chatbot | Extending Your Chatbot
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#troubleshooting | Troubleshooting
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#api-reference | API Reference
https://www.jac-lang.org/learn/examples/rag_chatbot/Overview#build-an-ai-powered-multimodal-mcp-chatbot | Build an AI-Powered Multimodal MCP Chatbot#

# Agentic Fantasy Trading Game (https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game/)
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#overview | Overview
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#prerequisites | Prerequisites
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#step-1-define-game-data-structures | Step 1: Define Game Data Structures
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#step-2-configure-the-ai-model | Step 2: Configure the AI Model
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#step-3-implement-ai-powered-character-generation | Step 3: Implement AI-Powered Character Generation
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#step-4-implement-transaction-logic | Step 4: Implement Transaction Logic
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#step-5-build-conversational-ai-agent | Step 5: Build Conversational AI Agent
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#step-6-implement-the-game-loop | Step 6: Implement the Game Loop
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#ai-functions-vs-ai-agents | AI Functions vs AI Agents
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#ai-functions-stateless | AI Functions (Stateless)
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#ai-agents-stateful | AI Agents (Stateful)
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#implementation-concepts | Implementation Concepts
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#tool-integration | Tool Integration
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#state-management | State Management
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#running-the-implementation | Running the Implementation
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#example-interaction | Example Interaction
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#summary | Summary
https://www.jac-lang.org/learn/examples/mtp_examples/fantasy_trading_game#tutorial-building-ai-agents-for-fantasy-trading-game | Tutorial: Building AI Agents for Fantasy Trading Game#

# 1. Welcome to Jac (https://www.jac-lang.org/jac_book/chapter_1/)
https://www.jac-lang.org/jac_book/chapter_1#what-is-jac-and-why-it-exists | What is Jac and Why It Exists
https://www.jac-lang.org/jac_book/chapter_1#traditional-approach-to-modelling-relationships | Traditional Approach to Modelling Relationships
https://www.jac-lang.org/jac_book/chapter_1#modelling-relationships-naturally | Modelling Relationships Naturally
https://www.jac-lang.org/jac_book/chapter_1#object-spatial-programming-paradigm-overview | Object-Spatial Programming Paradigm Overview
https://www.jac-lang.org/jac_book/chapter_1#nodes-data-with-location | Nodes: Data with Location
https://www.jac-lang.org/jac_book/chapter_1#edges-first-class-relationships | Edges: First-Class Relationships
https://www.jac-lang.org/jac_book/chapter_1#walkers-mobile-computation | Walkers: Mobile Computation
https://www.jac-lang.org/jac_book/chapter_1#scale-agnostic-programming-concept | Scale-Agnostic Programming Concept
https://www.jac-lang.org/jac_book/chapter_1#automatic-persistence | Automatic Persistence
https://www.jac-lang.org/jac_book/chapter_1#multi-user-isolation | Multi-User Isolation
https://www.jac-lang.org/jac_book/chapter_1#comparison-with-python-and-traditional-languages | Comparison with Python and Traditional Languages
https://www.jac-lang.org/jac_book/chapter_1#syntax-familiarity | Syntax Familiarity
https://www.jac-lang.org/jac_book/chapter_1#key-differences | Key Differences
https://www.jac-lang.org/jac_book/chapter_1#simple-friend-network-example | Simple Friend Network Example
https://www.jac-lang.org/jac_book/chapter_1#step-1-define-your-nodes-and-edges | Step 1: Define Your Nodes and Edges
https://www.jac-lang.org/jac_book/chapter_1#step-2-create-the-people-and-their-connections | Step 2: Create the People and Their Connections
https://www.jac-lang.org/jac_book/chapter_1#step-3-create-a-walker-to-find-common-interests | Step 3: Create a Walker to Find Common Interests
https://www.jac-lang.org/jac_book/chapter_1#step-4-bring-it-all-together | Step 4: Bring It All Together
https://www.jac-lang.org/jac_book/chapter_1#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_1#1-introduction-to-jac | 1. Introduction to Jac#

# 2. Variables, Types, and Basic Syntax (https://www.jac-lang.org/jac_book/chapter_2/)
https://www.jac-lang.org/jac_book/chapter_2#variable-declarations | Variable Declarations
https://www.jac-lang.org/jac_book/chapter_2#local-variables | Local Variables
https://www.jac-lang.org/jac_book/chapter_2#global-variables | Global Variables
https://www.jac-lang.org/jac_book/chapter_2#integers | Integers
https://www.jac-lang.org/jac_book/chapter_2#floats | Floats
https://www.jac-lang.org/jac_book/chapter_2#strings | Strings
https://www.jac-lang.org/jac_book/chapter_2#booleans | Booleans
https://www.jac-lang.org/jac_book/chapter_2#any-type-for-flexibility | Any Type for Flexibility
https://www.jac-lang.org/jac_book/chapter_2#jac-repl | Jac REPL
https://www.jac-lang.org/jac_book/chapter_2#wrapping-up | Wrapping Up
https://www.jac-lang.org/jac_book/chapter_2#2-variables-types-and-basic-syntax | 2. Variables, Types, and Basic Syntax#

# 3. Functions, Control Flow, and Collections in Jac (https://www.jac-lang.org/jac_book/chapter_3/)
https://www.jac-lang.org/jac_book/chapter_3#functions-and-type-annotations | Functions and Type Annotations
https://www.jac-lang.org/jac_book/chapter_3#basic-calculator-program | Basic Calculator Program
https://www.jac-lang.org/jac_book/chapter_3#basic-object-oriented-programming | Basic Object Oriented Programming
https://www.jac-lang.org/jac_book/chapter_3#defining-an-object | Defining an Object
https://www.jac-lang.org/jac_book/chapter_3#enhanced-calculator-with-object-oriented-design | Enhanced Calculator with Object-Oriented Design
https://www.jac-lang.org/jac_book/chapter_3#collections-and-data-structures | Collections and Data Structures
https://www.jac-lang.org/jac_book/chapter_3#lists | Lists
https://www.jac-lang.org/jac_book/chapter_3#dictionaries | Dictionaries
https://www.jac-lang.org/jac_book/chapter_3#sets | Sets
https://www.jac-lang.org/jac_book/chapter_3#collection-comprehensions | Collection Comprehensions
https://www.jac-lang.org/jac_book/chapter_3#control-flow-with-curly-braces | Control Flow with Curly Braces
https://www.jac-lang.org/jac_book/chapter_3#if-statements | If Statements
https://www.jac-lang.org/jac_book/chapter_3#conditional-logic-if-elif-else | Conditional Logic if-elif-else
https://www.jac-lang.org/jac_book/chapter_3#working-with-loops | Working with Loops
https://www.jac-lang.org/jac_book/chapter_3#traditional-for-loops | Traditional For Loops
https://www.jac-lang.org/jac_book/chapter_3#jacs-unique-for-to-by-loops | Jac's Unique For-to-by Loops
https://www.jac-lang.org/jac_book/chapter_3#while-loops | While Loops
https://www.jac-lang.org/jac_book/chapter_3#pattern-matching-for-complex-logic | Pattern Matching for Complex Logic
https://www.jac-lang.org/jac_book/chapter_3#exception-handling | Exception Handling
https://www.jac-lang.org/jac_book/chapter_3#comments-in-jac | Comments in Jac
https://www.jac-lang.org/jac_book/chapter_3#project-structure-conventions | Project Structure Conventions
https://www.jac-lang.org/jac_book/chapter_3#interface-and-implementation-separation | Interface and Implementation Separation
https://www.jac-lang.org/jac_book/chapter_3#common-beginner-mistakes-and-solutions | Common Beginner Mistakes and Solutions
https://www.jac-lang.org/jac_book/chapter_3#example-of-common-fixes | Example of Common Fixes
https://www.jac-lang.org/jac_book/chapter_3#complete-example-simple-grade-book-system | Complete Example: Simple Grade Book System
https://www.jac-lang.org/jac_book/chapter_3#wrapping-up | Wrapping Up
https://www.jac-lang.org/jac_book/chapter_3#3-functions-control-flow-and-collections-in-jac | 3. Functions, Control Flow, and Collections in Jac#

# 4. AI functions and Decorators (https://www.jac-lang.org/jac_book/chapter_4/)
https://www.jac-lang.org/jac_book/chapter_4#functional-programming-in-jac | Functional Programming in Jac
https://www.jac-lang.org/jac_book/chapter_4#function-as-first-class-citizens | Function as First-Class Citizens
https://www.jac-lang.org/jac_book/chapter_4#lambda-functions | Lambda Functions
https://www.jac-lang.org/jac_book/chapter_4#higher-order-functions | Higher-Order Functions
https://www.jac-lang.org/jac_book/chapter_4#built-in-higher-order-functions-map-filter-and-sorted | Built-in Higher-Order Functions map, filter, and sorted
https://www.jac-lang.org/jac_book/chapter_4#filter | filter
https://www.jac-lang.org/jac_book/chapter_4#map | map
https://www.jac-lang.org/jac_book/chapter_4#sorted | sorted
https://www.jac-lang.org/jac_book/chapter_4#decorators-for-enhanced-functionality | Decorators for Enhanced Functionality
https://www.jac-lang.org/jac_book/chapter_4#decorator-stacking-order | Decorator Stacking Order
https://www.jac-lang.org/jac_book/chapter_4#parameterized-decorators | Parameterized Decorators
https://www.jac-lang.org/jac_book/chapter_4#error-handling-in-decorators | Error Handling in Decorators
https://www.jac-lang.org/jac_book/chapter_4#timing-decorator | Timing Decorator
https://www.jac-lang.org/jac_book/chapter_4#caching-memoization-decorator | Caching (Memoization) Decorator
https://www.jac-lang.org/jac_book/chapter_4#async-functions | Async Functions
https://www.jac-lang.org/jac_book/chapter_4#basic-async-functions | Basic Async Functions
https://www.jac-lang.org/jac_book/chapter_4#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_4#wrapping-up | Wrapping Up
https://www.jac-lang.org/jac_book/chapter_4#chapter-4-a-deeper-look-at-functions | Chapter 4: A Deeper Look at Functions#

# 5. Advanced AI Operations (https://www.jac-lang.org/jac_book/chapter_5/)
https://www.jac-lang.org/jac_book/chapter_5#byllm-overview | byLLM Overview
https://www.jac-lang.org/jac_book/chapter_5#functions-as-prompts | Functions as Prompts
https://www.jac-lang.org/jac_book/chapter_5#simple-image-captioning-tool | Simple Image Captioning Tool
https://www.jac-lang.org/jac_book/chapter_5#model-declaration-and-configuration | Model Declaration and Configuration
https://www.jac-lang.org/jac_book/chapter_5#model-configuration-options | Model Configuration Options
https://www.jac-lang.org/jac_book/chapter_5#updating-the-image-captioning-tool | Updating the Image Captioning Tool
https://www.jac-lang.org/jac_book/chapter_5#semantic-strings-and-context-enhancement | Semantic Strings and Context Enhancement
https://www.jac-lang.org/jac_book/chapter_5#testing-and-error-handling | Testing and Error Handling
https://www.jac-lang.org/jac_book/chapter_5#robust-ai-integration | Robust AI Integration
https://www.jac-lang.org/jac_book/chapter_5#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_5#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_5#chapter-5-advanced-ai-operations | Chapter 5: Advanced AI Operations#

# 6. Imports System and File Operations (https://www.jac-lang.org/jac_book/chapter_6/)
https://www.jac-lang.org/jac_book/chapter_6#import-statements-and-module-organization | Import Statements and Module Organization
https://www.jac-lang.org/jac_book/chapter_6#basic-import-patterns | Basic Import Patterns
https://www.jac-lang.org/jac_book/chapter_6#implementation-separation | Implementation Separation
https://www.jac-lang.org/jac_book/chapter_6#namespace-injection | Namespace Injection
https://www.jac-lang.org/jac_book/chapter_6#jac-import-internals | Jac Import Internals
https://www.jac-lang.org/jac_book/chapter_6#file-operations-and-external-integration | File Operations and External Integration
https://www.jac-lang.org/jac_book/chapter_6#basic-file-operations | Basic File Operations
https://www.jac-lang.org/jac_book/chapter_6#complete-example-configuration-management-system | Complete Example: Configuration Management System
https://www.jac-lang.org/jac_book/chapter_6#configuration-reader-module | Configuration Reader Module
https://www.jac-lang.org/jac_book/chapter_6#application-module | Application Module
https://www.jac-lang.org/jac_book/chapter_6#main-application-entry-point | Main Application Entry Point
https://www.jac-lang.org/jac_book/chapter_6#package-structure-and-organization | Package Structure and Organization
https://www.jac-lang.org/jac_book/chapter_6#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_6#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_6#chapter-6-imports-system-and-file-operations | Chapter 6: Imports System and File Operations#

# 7. Enhanced OOP (https://www.jac-lang.org/jac_book/chapter_7/)
https://www.jac-lang.org/jac_book/chapter_7#jac-obj-archetype | Jac obj Archetype
https://www.jac-lang.org/jac_book/chapter_7#advanced-constructor-features | Advanced Constructor Features
https://www.jac-lang.org/jac_book/chapter_7#object-inheritance | Object Inheritance
https://www.jac-lang.org/jac_book/chapter_7#simple-inheritance-example | Simple Inheritance Example
https://www.jac-lang.org/jac_book/chapter_7#access-control-with-pub-priv-protect | Access Control with :pub, :priv, :protect
https://www.jac-lang.org/jac_book/chapter_7#public-access | Public Access
https://www.jac-lang.org/jac_book/chapter_7#private-access | Private Access
https://www.jac-lang.org/jac_book/chapter_7#protected-access | Protected Access
https://www.jac-lang.org/jac_book/chapter_7#example-pet-record-system | Example: Pet Record System
https://www.jac-lang.org/jac_book/chapter_7#key-differences-from-python-oop | Key Differences from Python OOP
https://www.jac-lang.org/jac_book/chapter_7#wrapping-up | Wrapping Up
https://www.jac-lang.org/jac_book/chapter_7#chapter-7-enhanced-oop-objects-and-classes | Chapter 7: Enhanced OOP - Objects and Classes#

# 8. OSP Introduction and Paradigm Shift (https://www.jac-lang.org/jac_book/chapter_8/)
https://www.jac-lang.org/jac_book/chapter_8#journey-from-oop-to-osp | Journey from OOP to OSP
https://www.jac-lang.org/jac_book/chapter_8#with-entry-vs-if-__name__-__main__ | with entry vs if __name__ == "__main__":
https://www.jac-lang.org/jac_book/chapter_8#creating-a-node-and-adding-it-to-the-graph | Creating a Node and adding it to the Graph
https://www.jac-lang.org/jac_book/chapter_8#connecting-nodes-with-edges | Connecting Nodes with Edges
https://www.jac-lang.org/jac_book/chapter_8#building-out-the-rest-of-the-graph | Building out the rest of the Graph
https://www.jac-lang.org/jac_book/chapter_8#from-data-to-computation-to-computation-to-data | From "Data to Computation" to "Computation to Data"
https://www.jac-lang.org/jac_book/chapter_8#walking-the-graph | Walking the Graph
https://www.jac-lang.org/jac_book/chapter_8#the-visit-statement-and-syntax | The visit Statement and --> Syntax
https://www.jac-lang.org/jac_book/chapter_8#putting-it-all-together | Putting it All Together
https://www.jac-lang.org/jac_book/chapter_8#wrapping-up | Wrapping Up
https://www.jac-lang.org/jac_book/chapter_8#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_8#chapter-8-osp-introduction-and-paradigm-shift | Chapter 8: OSP Introduction and Paradigm Shift#

# 9. Nodes and Edges (https://www.jac-lang.org/jac_book/chapter_9/)
https://www.jac-lang.org/jac_book/chapter_9#node-abilities | Node Abilities
https://www.jac-lang.org/jac_book/chapter_9#usecase-uninformed-state-agent | Usecase: Uninformed State Agent
https://www.jac-lang.org/jac_book/chapter_9#node-inheritance | Node Inheritance
https://www.jac-lang.org/jac_book/chapter_9#usecase-a-smarter-npc | Usecase: A Smarter NPC
https://www.jac-lang.org/jac_book/chapter_9#step-1-the-mood-function | Step 1 - The Mood Function
https://www.jac-lang.org/jac_book/chapter_9#step-2-the-npc-node | Step 2 - The NPC Node
https://www.jac-lang.org/jac_book/chapter_9#walker-composition | Walker Composition
https://www.jac-lang.org/jac_book/chapter_9#putting-it-all-together | Putting It All Together
https://www.jac-lang.org/jac_book/chapter_9#edge-types-and-relationships | Edge Types and Relationships
https://www.jac-lang.org/jac_book/chapter_9#basic-edge-declaration | Basic Edge Declaration
https://www.jac-lang.org/jac_book/chapter_9#graph-navigation-and-filtering | Graph Navigation and Filtering
https://www.jac-lang.org/jac_book/chapter_9#directional-traversal | Directional Traversal
https://www.jac-lang.org/jac_book/chapter_9#filter-by-node-type | Filter by Node Type
https://www.jac-lang.org/jac_book/chapter_9#filtering-by-node-attributes | Filtering by Node Attributes
https://www.jac-lang.org/jac_book/chapter_9#supported-operators | Supported Operators
https://www.jac-lang.org/jac_book/chapter_9#example | Example
https://www.jac-lang.org/jac_book/chapter_9#filtering-by-edge-type-and-attributes | Filtering by Edge Type and Attributes
https://www.jac-lang.org/jac_book/chapter_9#example_1 | Example
https://www.jac-lang.org/jac_book/chapter_9#edge-atribute-filtering | Edge Atribute Filtering
https://www.jac-lang.org/jac_book/chapter_9#example_2 | Example
https://www.jac-lang.org/jac_book/chapter_9#wrapping-up | Wrapping Up
https://www.jac-lang.org/jac_book/chapter_9#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_9#chapter-9-nodes-and-edges | Chapter 9: Nodes and Edges#

# 10. Walkers and Abilities (https://www.jac-lang.org/jac_book/chapter_10/)
https://www.jac-lang.org/jac_book/chapter_10#walker-creation | Walker Creation
https://www.jac-lang.org/jac_book/chapter_10#basic-walker-declaration | Basic Walker Declaration
https://www.jac-lang.org/jac_book/chapter_10#ability-definitions-and-triggers | Ability Definitions and Triggers
https://www.jac-lang.org/jac_book/chapter_10#entry-and-exit-abilities | Entry and Exit Abilities
https://www.jac-lang.org/jac_book/chapter_10#walker-spawn-and-visit | Walker Spawn and Visit
https://www.jac-lang.org/jac_book/chapter_10#basic-traversal-patterns | Basic Traversal Patterns
https://www.jac-lang.org/jac_book/chapter_10#advanced-traversal-control | Advanced Traversal Control
https://www.jac-lang.org/jac_book/chapter_10#walker-control-flow | Walker Control Flow
https://www.jac-lang.org/jac_book/chapter_10#controlling-walker-behavior | Controlling Walker Behavior
https://www.jac-lang.org/jac_book/chapter_10#key-concepts-summary | Key Concepts Summary
https://www.jac-lang.org/jac_book/chapter_10#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_10#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_10#chapter-10-walkers-and-abilities | Chapter 10: Walkers and Abilities#

# 11. Advanced Object Spatial Operations (https://www.jac-lang.org/jac_book/chapter_11/)
https://www.jac-lang.org/jac_book/chapter_11#advanced-filtering | Advanced Filtering
https://www.jac-lang.org/jac_book/chapter_11#property-based-filtering | Property-Based Filtering
https://www.jac-lang.org/jac_book/chapter_11#complex-relationship-filtering | Complex Relationship Filtering
https://www.jac-lang.org/jac_book/chapter_11#visit-patterns | Visit Patterns
https://www.jac-lang.org/jac_book/chapter_11#breadth-first-vs-depth-first-traversal | Breadth-First vs Depth-First Traversal
https://www.jac-lang.org/jac_book/chapter_11#priority-based-visiting | Priority-Based Visiting
https://www.jac-lang.org/jac_book/chapter_11#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_11#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_11#chapter-11-advanced-object-spatial-operations | Chapter 11: Advanced Object Spatial Operations#

# 12. Walkers as API Endpoints (https://www.jac-lang.org/jac_book/chapter_12/)
https://www.jac-lang.org/jac_book/chapter_12#what-is-jac-cloud | What is Jac Cloud?
https://www.jac-lang.org/jac_book/chapter_12#quick-setup-and-deployment | Quick Setup and Deployment
https://www.jac-lang.org/jac_book/chapter_12#deploying-to-cloud | Deploying to Cloud
https://www.jac-lang.org/jac_book/chapter_12#going-beyond-building-a-shared-notebook-api | Going Beyond: Building a Shared Notebook API
https://www.jac-lang.org/jac_book/chapter_12#convert-to-get-request | Convert to GET request
https://www.jac-lang.org/jac_book/chapter_12#parameter-validation | Parameter Validation
https://www.jac-lang.org/jac_book/chapter_12#enhanced-notebook-with-validation | Enhanced Notebook with Validation
https://www.jac-lang.org/jac_book/chapter_12#testing-validation | Testing Validation
https://www.jac-lang.org/jac_book/chapter_12#rest-patterns-with-walkers | REST Patterns with Walkers
https://www.jac-lang.org/jac_book/chapter_12#complete-notebook-api | Complete Notebook API
https://www.jac-lang.org/jac_book/chapter_12#api-usage-examples | API Usage Examples
https://www.jac-lang.org/jac_book/chapter_12#shared-notebook-with-permissions | Shared Notebook with Permissions
https://www.jac-lang.org/jac_book/chapter_12#testing-shared-notebook | Testing Shared Notebook
https://www.jac-lang.org/jac_book/chapter_12#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_12#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_12#chapter-12-walkers-as-api-endpoints | Chapter 12: Walkers as API Endpoints#

# 13. Persistence and the Root Node (https://www.jac-lang.org/jac_book/chapter_13/)
https://www.jac-lang.org/jac_book/chapter_13#what-is-automatic-persistence | What is Automatic Persistence?
https://www.jac-lang.org/jac_book/chapter_13#traditional-vs-jac-persistence | Traditional vs Jac Persistence
https://www.jac-lang.org/jac_book/chapter_13#setting-up-a-jac-cloud-project | Setting Up a Jac Cloud Project
https://www.jac-lang.org/jac_book/chapter_13#the-root-node-concept | The Root Node Concept
https://www.jac-lang.org/jac_book/chapter_13#understanding-root-node | Understanding Root Node
https://www.jac-lang.org/jac_book/chapter_13#running-the-service | Running the Service
https://www.jac-lang.org/jac_book/chapter_13#testing-persistence | Testing Persistence
https://www.jac-lang.org/jac_book/chapter_13#state-consistency | State Consistency
https://www.jac-lang.org/jac_book/chapter_13#enhanced-counter-with-history | Enhanced Counter with History
https://www.jac-lang.org/jac_book/chapter_13#testing-history-persistence | Testing History Persistence
https://www.jac-lang.org/jac_book/chapter_13#building-stateful-applications | Building Stateful Applications
https://www.jac-lang.org/jac_book/chapter_13#api-usage-examples | API Usage Examples
https://www.jac-lang.org/jac_book/chapter_13#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_13#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_13#chapter-13-persistence-and-the-root-node | Chapter 13: Persistence and the Root Node#

# 14. Multi (https://www.jac-lang.org/jac_book/chapter_14/)
https://www.jac-lang.org/jac_book/chapter_14#user-isolation-and-permission-systems | User Isolation and Permission Systems
https://www.jac-lang.org/jac_book/chapter_14#traditional-vs-jac-multi-user-development | Traditional vs Jac Multi-User Development
https://www.jac-lang.org/jac_book/chapter_14#basic-user-authentication | Basic User Authentication
https://www.jac-lang.org/jac_book/chapter_14#setting-up-user-aware-notebook | Setting Up User-Aware Notebook
https://www.jac-lang.org/jac_book/chapter_14#deploying-and-testing | Deploying and Testing
https://www.jac-lang.org/jac_book/chapter_14#testing-user-authentication | Testing User Authentication
https://www.jac-lang.org/jac_book/chapter_14#shared-data-patterns | Shared Data Patterns
https://www.jac-lang.org/jac_book/chapter_14#note-sharing-implementation | Note Sharing Implementation
https://www.jac-lang.org/jac_book/chapter_14#testing-note-sharing | Testing Note Sharing
https://www.jac-lang.org/jac_book/chapter_14#security-considerations | Security Considerations
https://www.jac-lang.org/jac_book/chapter_14#secure-data-access-patterns | Secure Data Access Patterns
https://www.jac-lang.org/jac_book/chapter_14#access-control-strategies | Access Control Strategies
https://www.jac-lang.org/jac_book/chapter_14#role-based-access-control | Role-Based Access Control
https://www.jac-lang.org/jac_book/chapter_14#testing-role-based-access | Testing Role-Based Access
https://www.jac-lang.org/jac_book/chapter_14#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_14#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_14#chapter-14-multi-user-architecture-and-permissions | Chapter 14: Multi-User Architecture and Permissions#

# 15. Advanced Jac Cloud Features (https://www.jac-lang.org/jac_book/chapter_15/)
https://www.jac-lang.org/jac_book/chapter_15#environment-variables-and-configuration | Environment Variables and Configuration
https://www.jac-lang.org/jac_book/chapter_15#traditional-vs-jac-configuration | Traditional vs Jac Configuration
https://www.jac-lang.org/jac_book/chapter_15#basic-chat-room-setup | Basic Chat Room Setup
https://www.jac-lang.org/jac_book/chapter_15#environment-setup | Environment Setup
https://www.jac-lang.org/jac_book/chapter_15#message-management-and-storage | Message Management and Storage
https://www.jac-lang.org/jac_book/chapter_15#message-storage-implementation | Message Storage Implementation
https://www.jac-lang.org/jac_book/chapter_15#testing-message-api | Testing Message API
https://www.jac-lang.org/jac_book/chapter_15#webhook-integration | Webhook Integration
https://www.jac-lang.org/jac_book/chapter_15#webhook-receiver-implementation | Webhook Receiver Implementation
https://www.jac-lang.org/jac_book/chapter_15#testing-webhooks | Testing Webhooks
https://www.jac-lang.org/jac_book/chapter_15#logging-and-monitoring | Logging and Monitoring
https://www.jac-lang.org/jac_book/chapter_15#application-logging | Application Logging
https://www.jac-lang.org/jac_book/chapter_15#background-tasks-and-cleanup | Background Tasks and Cleanup
https://www.jac-lang.org/jac_book/chapter_15#scheduled-chat-maintenance | Scheduled Chat Maintenance
https://www.jac-lang.org/jac_book/chapter_15#manual-task-execution | Manual Task Execution
https://www.jac-lang.org/jac_book/chapter_15#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_15#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_15#chapter-15-advanced-jac-cloud-features | Chapter 15: Advanced Jac Cloud Features#

# 16. Type System Deep Dive (https://www.jac-lang.org/jac_book/chapter_16/)
https://www.jac-lang.org/jac_book/chapter_16#advanced-type-system-features | Advanced Type System Features
https://www.jac-lang.org/jac_book/chapter_16#traditional-vs-jac-type-system | Traditional vs Jac Type System
https://www.jac-lang.org/jac_book/chapter_16#runtime-type-validation | Runtime Type Validation
https://www.jac-lang.org/jac_book/chapter_16#type-guards-and-validation | Type Guards and Validation
https://www.jac-lang.org/jac_book/chapter_16#advanced-type-guards | Advanced Type Guards
https://www.jac-lang.org/jac_book/chapter_16#graph-aware-type-checking | Graph-Aware Type Checking
https://www.jac-lang.org/jac_book/chapter_16#node-and-edge-type-safety | Node and Edge Type Safety
https://www.jac-lang.org/jac_book/chapter_16#walker-type-validation | Walker Type Validation
https://www.jac-lang.org/jac_book/chapter_16#building-type-safe-components | Building Type-Safe Components
https://www.jac-lang.org/jac_book/chapter_16#generic-data-structures | Generic Data Structures
https://www.jac-lang.org/jac_book/chapter_16#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_16#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_16#chapter-17-type-system-deep-dive | Chapter 17: Type System Deep Dive#

# 17. Testing and Debugging (https://www.jac-lang.org/jac_book/chapter_17/)
https://www.jac-lang.org/jac_book/chapter_17#jacs-built-in-testing-framework | Jac's Built-in Testing Framework
https://www.jac-lang.org/jac_book/chapter_17#traditional-vs-jac-testing | Traditional vs Jac Testing
https://www.jac-lang.org/jac_book/chapter_17#testing-graph-structures | Testing Graph Structures
https://www.jac-lang.org/jac_book/chapter_17#basic-social-media-system | Basic Social Media System
https://www.jac-lang.org/jac_book/chapter_17#comprehensive-test-suite | Comprehensive Test Suite
https://www.jac-lang.org/jac_book/chapter_17#debugging-spatial-applications | Debugging Spatial Applications
https://www.jac-lang.org/jac_book/chapter_17#debug-output-and-tracing | Debug Output and Tracing
https://www.jac-lang.org/jac_book/chapter_17#walker-state-inspection | Walker State Inspection
https://www.jac-lang.org/jac_book/chapter_17#performance-testing-and-optimization | Performance Testing and Optimization
https://www.jac-lang.org/jac_book/chapter_17#benchmark-testing | Benchmark Testing
https://www.jac-lang.org/jac_book/chapter_17#memory-and-resource-testing | Memory and Resource Testing
https://www.jac-lang.org/jac_book/chapter_17#test-driven-development-with-osp | Test-Driven Development with OSP
https://www.jac-lang.org/jac_book/chapter_17#tdd-example-building-a-recommendation-system | TDD Example: Building a Recommendation System
https://www.jac-lang.org/jac_book/chapter_17#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_17#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_17#chapter-18-testing-and-debugging | Chapter 18: Testing and Debugging#

# 18. Deployment Strategies (https://www.jac-lang.org/jac_book/chapter_18/)
https://www.jac-lang.org/jac_book/chapter_18#local-to-cloud-deployment | Local to Cloud Deployment
https://www.jac-lang.org/jac_book/chapter_18#development-to-production-pipeline | Development to Production Pipeline
https://www.jac-lang.org/jac_book/chapter_18#docker-containerization | Docker Containerization
https://www.jac-lang.org/jac_book/chapter_18#basic-dockerfile-for-jac-applications | Basic Dockerfile for Jac Applications
https://www.jac-lang.org/jac_book/chapter_18#building-and-testing-docker-images | Building and Testing Docker Images
https://www.jac-lang.org/jac_book/chapter_18#kubernetes-deployment | Kubernetes Deployment
https://www.jac-lang.org/jac_book/chapter_18#kubernetes-manifests | Kubernetes Manifests
https://www.jac-lang.org/jac_book/chapter_18#deploying-to-kubernetes | Deploying to Kubernetes
https://www.jac-lang.org/jac_book/chapter_18#jac-cloud-deployment | Jac Cloud Deployment
https://www.jac-lang.org/jac_book/chapter_18#jac-cloud-setup | Jac Cloud Setup
https://www.jac-lang.org/jac_book/chapter_18#jac-cloud-configuration-files | Jac Cloud Configuration Files
https://www.jac-lang.org/jac_book/chapter_18#environment-variables-and-configuration | Environment Variables and Configuration
https://www.jac-lang.org/jac_book/chapter_18#step-by-step-deployment-guide | Step-by-Step Deployment Guide
https://www.jac-lang.org/jac_book/chapter_18#monitoring-and-updating | Monitoring and Updating
https://www.jac-lang.org/jac_book/chapter_18#troubleshooting-and-validation | Troubleshooting and Validation
https://www.jac-lang.org/jac_book/chapter_18#advanced-configuration-management | Advanced Configuration Management
https://www.jac-lang.org/jac_book/chapter_18#cleanup | Cleanup
https://www.jac-lang.org/jac_book/chapter_18#production-monitoring-and-maintenance | Production Monitoring and Maintenance
https://www.jac-lang.org/jac_book/chapter_18#enhanced-health-checks-and-metrics | Enhanced Health Checks and Metrics
https://www.jac-lang.org/jac_book/chapter_18#scaling-and-performance | Scaling and Performance
https://www.jac-lang.org/jac_book/chapter_18#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_18#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_18#chapter-19-deployment-strategies | Chapter 19: Deployment Strategies#

# 19. Performance Optimization (https://www.jac-lang.org/jac_book/chapter_19/)
https://www.jac-lang.org/jac_book/chapter_19#graph-structure-optimization | Graph Structure Optimization
https://www.jac-lang.org/jac_book/chapter_19#traditional-vs-optimized-graph-design | Traditional vs Optimized Graph Design
https://www.jac-lang.org/jac_book/chapter_19#traversal-efficiency | Traversal Efficiency
https://www.jac-lang.org/jac_book/chapter_19#basic-friend-finding-algorithm | Basic Friend-Finding Algorithm
https://www.jac-lang.org/jac_book/chapter_19#optimized-breadth-first-traversal | Optimized Breadth-First Traversal
https://www.jac-lang.org/jac_book/chapter_19#memory-management | Memory Management
https://www.jac-lang.org/jac_book/chapter_19#memory-efficient-data-structures | Memory-Efficient Data Structures
https://www.jac-lang.org/jac_book/chapter_19#performance-monitoring | Performance Monitoring
https://www.jac-lang.org/jac_book/chapter_19#distributed-performance | Distributed Performance
https://www.jac-lang.org/jac_book/chapter_19#cloud-optimized-friend-finding | Cloud-Optimized Friend Finding
https://www.jac-lang.org/jac_book/chapter_19#performance-testing-and-deployment | Performance Testing and Deployment
https://www.jac-lang.org/jac_book/chapter_19#creating-test-data | Creating Test Data
https://www.jac-lang.org/jac_book/chapter_19#testing-performance | Testing Performance
https://www.jac-lang.org/jac_book/chapter_19#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_19#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_19#chapter-20-performance-optimization | Chapter 20: Performance Optimization#

# 20. Python to Jac Migration (https://www.jac-lang.org/jac_book/chapter_20/)
https://www.jac-lang.org/jac_book/chapter_20#migration-strategies | Migration Strategies
https://www.jac-lang.org/jac_book/chapter_20#migration-approaches | Migration Approaches
https://www.jac-lang.org/jac_book/chapter_20#starting-point-python-library-system | Starting Point: Python Library System
https://www.jac-lang.org/jac_book/chapter_20#original-python-implementation | Original Python Implementation
https://www.jac-lang.org/jac_book/chapter_20#step-1-converting-classes-to-objects | Step 1: Converting Classes to Objects
https://www.jac-lang.org/jac_book/chapter_20#basic-class-to-object-migration | Basic Class to Object Migration
https://www.jac-lang.org/jac_book/chapter_20#testing-the-migration | Testing the Migration
https://www.jac-lang.org/jac_book/chapter_20#step-2-introducing-spatial-relationships | Step 2: Introducing Spatial Relationships
https://www.jac-lang.org/jac_book/chapter_20#from-collections-to-graph-structures | From Collections to Graph Structures
https://www.jac-lang.org/jac_book/chapter_20#incremental-adoption-patterns | Incremental Adoption Patterns
https://www.jac-lang.org/jac_book/chapter_20#python-jac-integration | Python-Jac Integration
https://www.jac-lang.org/jac_book/chapter_20#common-migration-pitfalls | Common Migration Pitfalls
https://www.jac-lang.org/jac_book/chapter_20#pitfall-1-direct-syntax-translation | Pitfall 1: Direct Syntax Translation
https://www.jac-lang.org/jac_book/chapter_20#pitfall-2-ignoring-type-safety | Pitfall 2: Ignoring Type Safety
https://www.jac-lang.org/jac_book/chapter_20#migration-checklist | Migration Checklist
https://www.jac-lang.org/jac_book/chapter_20#final-migration-example | Final Migration Example
https://www.jac-lang.org/jac_book/chapter_20#best-practices | Best Practices
https://www.jac-lang.org/jac_book/chapter_20#key-takeaways | Key Takeaways
https://www.jac-lang.org/jac_book/chapter_20#chapter-21-python-to-jac-migration | Chapter 21: Python to Jac Migration#

# What is MTP (https://www.jac-lang.org/learn/jac-byllm/with_llm/)
https://www.jac-lang.org/learn/jac-byllm/with_llm#ai-integrated-agentic-application-development | AI-Integrated & Agentic Application Development
https://www.jac-lang.org/learn/jac-byllm/with_llm#what-is-mtp | What is MTP?
https://www.jac-lang.org/learn/jac-byllm/with_llm#genai-in-jaclang-mtp | GenAI in Jaclang - MTP#

# Quick Start Guide (https://www.jac-lang.org/learn/jac-cloud/quickstart/)
https://www.jac-lang.org/learn/jac-cloud/quickstart#your-first-jac-cloud-server-in-30-seconds | Your First Jac Cloud Server in 30 Seconds
https://www.jac-lang.org/learn/jac-cloud/quickstart#development-mode | Development Mode
https://www.jac-lang.org/learn/jac-cloud/quickstart#understanding-walker-endpoints | Understanding Walker Endpoints
https://www.jac-lang.org/learn/jac-cloud/quickstart#what-happens-automatically | What Happens Automatically
https://www.jac-lang.org/learn/jac-cloud/quickstart#want-to-disable-auto-generation | Want to Disable Auto-Generation?
https://www.jac-lang.org/learn/jac-cloud/quickstart#configuring-your-walkers | Configuring Your Walkers
https://www.jac-lang.org/learn/jac-cloud/quickstart#basic-configuration | Basic Configuration
https://www.jac-lang.org/learn/jac-cloud/quickstart#configuration-reference | Configuration Reference
https://www.jac-lang.org/learn/jac-cloud/quickstart#core-settings-most-common | Core Settings (Most Common)
https://www.jac-lang.org/learn/jac-cloud/quickstart#advanced-settings | Advanced Settings
https://www.jac-lang.org/learn/jac-cloud/quickstart#documentation-settings | Documentation Settings
https://www.jac-lang.org/learn/jac-cloud/quickstart#examples-for-beginners | Examples for Beginners
https://www.jac-lang.org/learn/jac-cloud/quickstart#basic-endpoint-example-time-service | Basic Endpoint Example - Time Service
https://www.jac-lang.org/learn/jac-cloud/quickstart#parameterized-endpoint-example-user-search | Parameterized Endpoint Example - User Search
https://www.jac-lang.org/learn/jac-cloud/quickstart#file-upload-example | File Upload Example
https://www.jac-lang.org/learn/jac-cloud/quickstart#response-format | Response Format
https://www.jac-lang.org/learn/jac-cloud/quickstart#what-to-expect | What to Expect
https://www.jac-lang.org/learn/jac-cloud/quickstart#working-with-node-and-edge-data | Working with Node and Edge Data
https://www.jac-lang.org/learn/jac-cloud/quickstart#data-persistence-manual-saving-and-commits | Data Persistence: Manual Saving and Commits
https://www.jac-lang.org/learn/jac-cloud/quickstart#save | Save
https://www.jac-lang.org/learn/jac-cloud/quickstart#commit | Commit
https://www.jac-lang.org/learn/jac-cloud/quickstart#helpful-environment-variables | Helpful Environment Variables
https://www.jac-lang.org/learn/jac-cloud/quickstart#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/quickstart#edge-case-manually-creating-walker-endpoints | Edge Case: Manually Creating Walker Endpoints
https://www.jac-lang.org/learn/jac-cloud/quickstart#quick-start-guide | Quick Start Guide#

# Permission Management: Secure Multi (https://www.jac-lang.org/learn/jac-cloud/permission/)
https://www.jac-lang.org/learn/jac-cloud/permission#why-permissions-matter | Why Permissions Matter
https://www.jac-lang.org/learn/jac-cloud/permission#key-concepts-for-beginners | Key Concepts for Beginners
https://www.jac-lang.org/learn/jac-cloud/permission#understanding-data-representations | Understanding Data Representations
https://www.jac-lang.org/learn/jac-cloud/permission#anchors-are-database-side-class-representations-that-contain | Anchors are database-side class representations that contain:
https://www.jac-lang.org/learn/jac-cloud/permission#archetypes-are-the-runtime-class-representations-directly-reflecting-fields-declared-in-jac-source-code-dev-can-access-their-respective-anchors-via-the-__jac__-attribute | Archetypes are the runtime class representations, directly reflecting fields declared in Jac source code. Dev can access their respective anchors via the __jac__ attribute
https://www.jac-lang.org/learn/jac-cloud/permission#permission-levels-explained | Permission Levels Explained
https://www.jac-lang.org/learn/jac-cloud/permission#how-permissions-work-simple-example | How Permissions Work (Simple Example)
https://www.jac-lang.org/learn/jac-cloud/permission#managing-permissions-in-code | Managing Permissions in Code
https://www.jac-lang.org/learn/jac-cloud/permission#grant-access-using-helper-functions | Grant Access Using Helper Functions
https://www.jac-lang.org/learn/jac-cloud/permission#revoke-access-using-helper-functions | Revoke Access Using Helper Functions
https://www.jac-lang.org/learn/jac-cloud/permission#make-content-public | Make Content Public
https://www.jac-lang.org/learn/jac-cloud/permission#make-content-private | Make Content Private
https://www.jac-lang.org/learn/jac-cloud/permission#common-permission-patterns | Common Permission Patterns
https://www.jac-lang.org/learn/jac-cloud/permission#public-read-private-write | Public Read, Private Write
https://www.jac-lang.org/learn/jac-cloud/permission#group-access | Group Access
https://www.jac-lang.org/learn/jac-cloud/permission#connection-based-permissions | Connection-based Permissions
https://www.jac-lang.org/learn/jac-cloud/permission#best-practices-for-beginners | Best Practices for Beginners
https://www.jac-lang.org/learn/jac-cloud/permission#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/permission#permission-management-secure-multi-user-access | Permission Management: Secure Multi-User Access#
https://www.jac-lang.org/learn/jac-cloud/permission#custom-access-validation | Custom Access Validation#

# Logging and Monitoring Your Application (https://www.jac-lang.org/learn/jac-cloud/logging/)
https://www.jac-lang.org/learn/jac-cloud/logging#why-logging-matters | Why Logging Matters
https://www.jac-lang.org/learn/jac-cloud/logging#quick-start-check-your-logs | Quick Start: Check Your Logs
https://www.jac-lang.org/learn/jac-cloud/logging#setting-up-visualization-with-elastic-stack | Setting Up Visualization with Elastic Stack
https://www.jac-lang.org/learn/jac-cloud/logging#step-1-install-filebeat | Step 1: Install Filebeat
https://www.jac-lang.org/learn/jac-cloud/logging#step-2-create-configuration-file | Step 2: Create Configuration File
https://www.jac-lang.org/learn/jac-cloud/logging#step-3-run-filebeat | Step 3: Run Filebeat
https://www.jac-lang.org/learn/jac-cloud/logging#customizing-your-logging | Customizing Your Logging
https://www.jac-lang.org/learn/jac-cloud/logging#example-production-settings | Example: Production Settings
https://www.jac-lang.org/learn/jac-cloud/logging#understanding-log-structure | Understanding Log Structure
https://www.jac-lang.org/learn/jac-cloud/logging#common-log-analysis-tasks | Common Log Analysis Tasks
https://www.jac-lang.org/learn/jac-cloud/logging#finding-errors | Finding Errors
https://www.jac-lang.org/learn/jac-cloud/logging#tracking-slow-requests | Tracking Slow Requests
https://www.jac-lang.org/learn/jac-cloud/logging#monitoring-user-activity | Monitoring User Activity
https://www.jac-lang.org/learn/jac-cloud/logging#logging-best-practices | Logging Best Practices
https://www.jac-lang.org/learn/jac-cloud/logging#1-use-appropriate-log-levels | 1. Use appropriate log levels:
https://www.jac-lang.org/learn/jac-cloud/logging#2-be-careful-with-sensitive-data | 2. Be careful with sensitive data:
https://www.jac-lang.org/learn/jac-cloud/logging#3-establish-log-retention-policies | 3. Establish log retention policies:
https://www.jac-lang.org/learn/jac-cloud/logging#4-set-up-alerts | 4. Set up alerts:
https://www.jac-lang.org/learn/jac-cloud/logging#troubleshooting-common-issues | Troubleshooting Common Issues
https://www.jac-lang.org/learn/jac-cloud/logging#missing-logs | Missing Logs
https://www.jac-lang.org/learn/jac-cloud/logging#filebeat-connection-issues | Filebeat Connection Issues
https://www.jac-lang.org/learn/jac-cloud/logging#high-disk-usage | High Disk Usage
https://www.jac-lang.org/learn/jac-cloud/logging#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/logging#logging-and-monitoring-your-application | Logging and Monitoring Your Application#

# Environment Variables: Configuration Made Easy (https://www.jac-lang.org/learn/jac-cloud/env_vars/)
https://www.jac-lang.org/learn/jac-cloud/env_vars#what-are-environment-variables | What Are Environment Variables?
https://www.jac-lang.org/learn/jac-cloud/env_vars#quick-start-setting-your-first-variables | Quick Start: Setting Your First Variables
https://www.jac-lang.org/learn/jac-cloud/env_vars#in-development-command-line | In Development (Command Line)
https://www.jac-lang.org/learn/jac-cloud/env_vars#in-production-environment-file | In Production (Environment File)
https://www.jac-lang.org/learn/jac-cloud/env_vars#core-configuration-groups | Core Configuration Groups
https://www.jac-lang.org/learn/jac-cloud/env_vars#database-connection | Database Connection
https://www.jac-lang.org/learn/jac-cloud/env_vars#redis-configuration-for-websockets-caching | Redis Configuration (for WebSockets & Caching)
https://www.jac-lang.org/learn/jac-cloud/env_vars#api-behavior | API Behavior
https://www.jac-lang.org/learn/jac-cloud/env_vars#security-settings | Security Settings
https://www.jac-lang.org/learn/jac-cloud/env_vars#token-security | Token Security
https://www.jac-lang.org/learn/jac-cloud/env_vars#user-verification | User Verification
https://www.jac-lang.org/learn/jac-cloud/env_vars#email-integration-for-verification | Email Integration (for Verification)
https://www.jac-lang.org/learn/jac-cloud/env_vars#logging-configuration | Logging Configuration
https://www.jac-lang.org/learn/jac-cloud/env_vars#environment-variable-reference-tables | Environment Variable Reference Tables
https://www.jac-lang.org/learn/jac-cloud/env_vars#database-cache-settings | Database & Cache Settings
https://www.jac-lang.org/learn/jac-cloud/env_vars#api-application-behavior | API & Application Behavior
https://www.jac-lang.org/learn/jac-cloud/env_vars#authentication-security | Authentication & Security
https://www.jac-lang.org/learn/jac-cloud/env_vars#logging-configuration_1 | Logging Configuration
https://www.jac-lang.org/learn/jac-cloud/env_vars#social-login-configuration | Social Login Configuration
https://www.jac-lang.org/learn/jac-cloud/env_vars#basic-pattern | Basic Pattern
https://www.jac-lang.org/learn/jac-cloud/env_vars#google-example | Google Example
https://www.jac-lang.org/learn/jac-cloud/env_vars#github-example | GitHub Example
https://www.jac-lang.org/learn/jac-cloud/env_vars#complete-sso-environment-variables | Complete SSO Environment Variables
https://www.jac-lang.org/learn/jac-cloud/env_vars#apple-specific-sso-configuration | Apple-Specific SSO Configuration
https://www.jac-lang.org/learn/jac-cloud/env_vars#supported-platforms | Supported Platforms
https://www.jac-lang.org/learn/jac-cloud/env_vars#server-configuration-uvicorn | Server Configuration (Uvicorn)
https://www.jac-lang.org/learn/jac-cloud/env_vars#basic-server-settings | Basic Server Settings
https://www.jac-lang.org/learn/jac-cloud/env_vars#httpsssl-configuration | HTTPS/SSL Configuration
https://www.jac-lang.org/learn/jac-cloud/env_vars#complete-uvicorn-configuration-table | Complete Uvicorn Configuration Table
https://www.jac-lang.org/learn/jac-cloud/env_vars#environment-presets-for-different-scenarios | Environment Presets for Different Scenarios
https://www.jac-lang.org/learn/jac-cloud/env_vars#local-development | Local Development
https://www.jac-lang.org/learn/jac-cloud/env_vars#testing | Testing
https://www.jac-lang.org/learn/jac-cloud/env_vars#production | Production
https://www.jac-lang.org/learn/jac-cloud/env_vars#best-practices-for-beginners | Best Practices for Beginners
https://www.jac-lang.org/learn/jac-cloud/env_vars#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/env_vars#environment-variables-configuration-made-easy | Environment Variables: Configuration Made Easy#

# WebSocket: Real (https://www.jac-lang.org/learn/jac-cloud/websocket/)
https://www.jac-lang.org/learn/jac-cloud/websocket#overview | Overview
https://www.jac-lang.org/learn/jac-cloud/websocket#walker-declaration-for-websockets | Walker Declaration for WebSockets
https://www.jac-lang.org/learn/jac-cloud/websocket#websocket-connection-details | WebSocket Connection Details
https://www.jac-lang.org/learn/jac-cloud/websocket#connection-url-and-parameters | Connection URL and Parameters
https://www.jac-lang.org/learn/jac-cloud/websocket#connection-process | Connection Process
https://www.jac-lang.org/learn/jac-cloud/websocket#connection-types | Connection Types
https://www.jac-lang.org/learn/jac-cloud/websocket#channel-subscription | Channel Subscription
https://www.jac-lang.org/learn/jac-cloud/websocket#client-event-types | Client Event Types
https://www.jac-lang.org/learn/jac-cloud/websocket#1-walker-event | 1. Walker Event
https://www.jac-lang.org/learn/jac-cloud/websocket#2-user-event | 2. User Event
https://www.jac-lang.org/learn/jac-cloud/websocket#3-channel-event | 3. Channel Event
https://www.jac-lang.org/learn/jac-cloud/websocket#4-client-event | 4. Client Event
https://www.jac-lang.org/learn/jac-cloud/websocket#5-change-user-event | 5. Change User Event
https://www.jac-lang.org/learn/jac-cloud/websocket#server-side-notification-methods | Server-Side Notification Methods
https://www.jac-lang.org/learn/jac-cloud/websocket#prerequisites | Prerequisites
https://www.jac-lang.org/learn/jac-cloud/websocket#available-notification-methods | Available Notification Methods
https://www.jac-lang.org/learn/jac-cloud/websocket#1-self-notification | 1. Self Notification
https://www.jac-lang.org/learn/jac-cloud/websocket#2-user-notification | 2. User Notification
https://www.jac-lang.org/learn/jac-cloud/websocket#3-channel-notification | 3. Channel Notification
https://www.jac-lang.org/learn/jac-cloud/websocket#4-client-notification | 4. Client Notification
https://www.jac-lang.org/learn/jac-cloud/websocket#end-to-end-integration-example | End-to-End Integration Example
https://www.jac-lang.org/learn/jac-cloud/websocket#server-side-jac | Server-Side (Jac)
https://www.jac-lang.org/learn/jac-cloud/websocket#client-side-javascript | Client-Side (JavaScript)
https://www.jac-lang.org/learn/jac-cloud/websocket#websocket-connection | WebSocket Connection
https://www.jac-lang.org/learn/jac-cloud/websocket#consuming-events | Consuming Events
https://www.jac-lang.org/learn/jac-cloud/websocket#publishing-events | Publishing Events
https://www.jac-lang.org/learn/jac-cloud/websocket#best-practices | Best Practices
https://www.jac-lang.org/learn/jac-cloud/websocket#common-use-cases | Common Use Cases
https://www.jac-lang.org/learn/jac-cloud/websocket#troubleshooting | Troubleshooting
https://www.jac-lang.org/learn/jac-cloud/websocket#additional-resources | Additional Resources
https://www.jac-lang.org/learn/jac-cloud/websocket#websocket-real-time-communication | WebSocket: Real-Time Communication#

# Task Scheduling: Automate Your Jac Applications (https://www.jac-lang.org/learn/jac-cloud/scheduler/)
https://www.jac-lang.org/learn/jac-cloud/scheduler#overview | Overview
https://www.jac-lang.org/learn/jac-cloud/scheduler#scheduler-configuration | Scheduler Configuration
https://www.jac-lang.org/learn/jac-cloud/scheduler#common-configuration-options | Common Configuration Options
https://www.jac-lang.org/learn/jac-cloud/scheduler#cron-trigger | Cron Trigger
https://www.jac-lang.org/learn/jac-cloud/scheduler#additional-cron-configuration-options | Additional Cron Configuration Options
https://www.jac-lang.org/learn/jac-cloud/scheduler#cron-example | Cron Example
https://www.jac-lang.org/learn/jac-cloud/scheduler#interval-trigger | Interval Trigger
https://www.jac-lang.org/learn/jac-cloud/scheduler#additional-interval-configuration-options | Additional Interval Configuration Options
https://www.jac-lang.org/learn/jac-cloud/scheduler#interval-example | Interval Example
https://www.jac-lang.org/learn/jac-cloud/scheduler#date-trigger | Date Trigger
https://www.jac-lang.org/learn/jac-cloud/scheduler#additional-date-configuration-options | Additional Date Configuration Options
https://www.jac-lang.org/learn/jac-cloud/scheduler#date-example | Date Example
https://www.jac-lang.org/learn/jac-cloud/scheduler#jac-cloud-optional-task-queue | Jac Cloud Optional Task Queue
https://www.jac-lang.org/learn/jac-cloud/scheduler#example-use-case | Example Use Case
https://www.jac-lang.org/learn/jac-cloud/scheduler#how-tasks-work | How Tasks Work
https://www.jac-lang.org/learn/jac-cloud/scheduler#best-practices | Best Practices
https://www.jac-lang.org/learn/jac-cloud/scheduler#debugging-scheduled-tasks | Debugging Scheduled Tasks
https://www.jac-lang.org/learn/jac-cloud/scheduler#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/scheduler#task-scheduling-automate-your-jac-applications | Task Scheduling: Automate Your Jac Applications#

# Async Walker (https://www.jac-lang.org/learn/jac-cloud/async_walker/)
https://www.jac-lang.org/learn/jac-cloud/async_walker#overview | Overview
https://www.jac-lang.org/learn/jac-cloud/async_walker#basic-usage | Basic Usage
https://www.jac-lang.org/learn/jac-cloud/async_walker#how-it-works | How It Works
https://www.jac-lang.org/learn/jac-cloud/async_walker#response-format | Response Format
https://www.jac-lang.org/learn/jac-cloud/async_walker#retrieving-results | Retrieving Results
https://www.jac-lang.org/learn/jac-cloud/async_walker#available-status-information | Available Status Information
https://www.jac-lang.org/learn/jac-cloud/async_walker#even-though-those-fields-are-available-we-still-recommend-using-a-walkers-attribute-as-your-status-checker-for-more-customizable-and-direct-status-updates | Even though those fields are available, we still recommend using a walker's attribute as your status checker for more customizable and direct status updates.
https://www.jac-lang.org/learn/jac-cloud/async_walker#example-long-running-process | Example: Long-Running Process
https://www.jac-lang.org/learn/jac-cloud/async_walker#common-use-cases | Common Use Cases
https://www.jac-lang.org/learn/jac-cloud/async_walker#1-processing-large-datasets | 1. Processing Large Datasets
https://www.jac-lang.org/learn/jac-cloud/async_walker#2-generating-reports | 2. Generating Reports
https://www.jac-lang.org/learn/jac-cloud/async_walker#3-external-api-integration | 3. External API Integration
https://www.jac-lang.org/learn/jac-cloud/async_walker#advanced-techniques | Advanced Techniques
https://www.jac-lang.org/learn/jac-cloud/async_walker#combining-with-websockets-for-real-time-updates | Combining with WebSockets for Real-time Updates
https://www.jac-lang.org/learn/jac-cloud/async_walker#error-handling | Error Handling
https://www.jac-lang.org/learn/jac-cloud/async_walker#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/async_walker#async-walker | Async Walker#

# Webhooks: External API Integration (https://www.jac-lang.org/learn/jac-cloud/webhook/)
https://www.jac-lang.org/learn/jac-cloud/webhook#what-are-webhooks | What are Webhooks?
https://www.jac-lang.org/learn/jac-cloud/webhook#key-features | Key Features
https://www.jac-lang.org/learn/jac-cloud/webhook#creating-a-webhook-walker | Creating a Webhook Walker
https://www.jac-lang.org/learn/jac-cloud/webhook#managing-api-keys | Managing API Keys
https://www.jac-lang.org/learn/jac-cloud/webhook#generating-a-new-api-key | Generating a New API Key
https://www.jac-lang.org/learn/jac-cloud/webhook#listing-all-api-keys | Listing All API Keys
https://www.jac-lang.org/learn/jac-cloud/webhook#extending-an-api-keys-expiration | Extending an API Key's Expiration
https://www.jac-lang.org/learn/jac-cloud/webhook#deleting-api-keys | Deleting API Keys
https://www.jac-lang.org/learn/jac-cloud/webhook#webhook-implementation-examples | Webhook Implementation Examples
https://www.jac-lang.org/learn/jac-cloud/webhook#1-using-header-for-api-key-default | 1. Using Header for API Key (Default)
https://www.jac-lang.org/learn/jac-cloud/webhook#2-using-query-parameter-for-api-key | 2. Using Query Parameter for API Key
https://www.jac-lang.org/learn/jac-cloud/webhook#3-using-path-parameter-for-api-key | 3. Using Path Parameter for API Key
https://www.jac-lang.org/learn/jac-cloud/webhook#4-using-request-body-for-api-key | 4. Using Request Body for API Key
https://www.jac-lang.org/learn/jac-cloud/webhook#best-practices | Best Practices
https://www.jac-lang.org/learn/jac-cloud/webhook#common-use-cases | Common Use Cases
https://www.jac-lang.org/learn/jac-cloud/webhook#troubleshooting | Troubleshooting
https://www.jac-lang.org/learn/jac-cloud/webhook#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/webhook#webhooks-external-api-integration | Webhooks: External API Integration#

# Cloud Deployment Guide (https://www.jac-lang.org/learn/jac-cloud/deployment/)
https://www.jac-lang.org/learn/jac-cloud/deployment#overview | Overview
https://www.jac-lang.org/learn/jac-cloud/deployment#prerequisites | Prerequisites
https://www.jac-lang.org/learn/jac-cloud/deployment#directory-structure | Directory Structure
https://www.jac-lang.org/learn/jac-cloud/deployment#step-by-step-deployment-guide | Step-by-Step Deployment Guide
https://www.jac-lang.org/learn/jac-cloud/deployment#1-build-and-push-the-docker-image | 1. Build and Push the Docker Image
https://www.jac-lang.org/learn/jac-cloud/deployment#2-apply-the-configmap | 2. Apply the ConfigMap
https://www.jac-lang.org/learn/jac-cloud/deployment#3-apply-kubernetes-resources | 3. Apply Kubernetes Resources
https://www.jac-lang.org/learn/jac-cloud/deployment#4-add-openai-api-key-optional | 4. Add OpenAI API Key (Optional)
https://www.jac-lang.org/learn/jac-cloud/deployment#5-verify-your-deployment | 5. Verify Your Deployment
https://www.jac-lang.org/learn/jac-cloud/deployment#configuration-details | Configuration Details
https://www.jac-lang.org/learn/jac-cloud/deployment#environment-variables | Environment Variables
https://www.jac-lang.org/learn/jac-cloud/deployment#configmap-configuration | ConfigMap Configuration
https://www.jac-lang.org/learn/jac-cloud/deployment#troubleshooting-and-validation | Troubleshooting and Validation
https://www.jac-lang.org/learn/jac-cloud/deployment#verify-namespace | Verify Namespace
https://www.jac-lang.org/learn/jac-cloud/deployment#verify-configmap | Verify ConfigMap
https://www.jac-lang.org/learn/jac-cloud/deployment#verify-deployment | Verify Deployment
https://www.jac-lang.org/learn/jac-cloud/deployment#advanced-usage | Advanced Usage
https://www.jac-lang.org/learn/jac-cloud/deployment#updating-configurations | Updating Configurations
https://www.jac-lang.org/learn/jac-cloud/deployment#monitoring-logs | Monitoring Logs
https://www.jac-lang.org/learn/jac-cloud/deployment#scaling-the-deployment | Scaling the Deployment
https://www.jac-lang.org/learn/jac-cloud/deployment#configuring-resource-limits | Configuring Resource Limits
https://www.jac-lang.org/learn/jac-cloud/deployment#cleanup | Cleanup
https://www.jac-lang.org/learn/jac-cloud/deployment#next-steps | Next Steps
https://www.jac-lang.org/learn/jac-cloud/deployment#cloud-deployment-guide | Cloud Deployment Guide#

# Utility APIs (https://www.jac-lang.org/learn/jac-cloud/utilities/)
https://www.jac-lang.org/learn/jac-cloud/utilities#traverse | Traverse
https://www.jac-lang.org/learn/jac-cloud/utilities#endpoint | Endpoint
https://www.jac-lang.org/learn/jac-cloud/utilities#authentication | Authentication
https://www.jac-lang.org/learn/jac-cloud/utilities#query-parameters | Query Parameters
https://www.jac-lang.org/learn/jac-cloud/utilities#sample-request | Sample Request
https://www.jac-lang.org/learn/jac-cloud/utilities#sample-response | Sample Response
https://www.jac-lang.org/learn/jac-cloud/utilities#traverse-stream | Traverse Stream
https://www.jac-lang.org/learn/jac-cloud/utilities#endpoint_1 | Endpoint
https://www.jac-lang.org/learn/jac-cloud/utilities#authentication_1 | Authentication
https://www.jac-lang.org/learn/jac-cloud/utilities#query-parameters_1 | Query Parameters
https://www.jac-lang.org/learn/jac-cloud/utilities#sample-request_1 | Sample Request
https://www.jac-lang.org/learn/jac-cloud/utilities#sample-streamed-response | Sample Streamed Response
https://www.jac-lang.org/learn/jac-cloud/utilities#utility-apis | Utility APIs#

# Jac Lens (https://www.jac-lang.org/learn/jac-lens/)
https://www.jac-lang.org/learn/jac-lens#quick-start | Quick Start
https://www.jac-lang.org/learn/jac-lens#1-access-the-application | 1. Access the Application
https://www.jac-lang.org/learn/jac-lens#2-installation-process | 2. Installation Process
https://www.jac-lang.org/learn/jac-lens#setup-for-jac-cloud-pre-025 | Setup for Jac Cloud (Pre-0.2.5)
https://www.jac-lang.org/learn/jac-lens#required-walkers | Required Walkers
https://www.jac-lang.org/learn/jac-lens#integration-steps | Integration Steps
https://www.jac-lang.org/learn/jac-lens#using-jac-lens | Using Jac Lens
https://www.jac-lang.org/learn/jac-lens#1-server-connection | 1. Server Connection
https://www.jac-lang.org/learn/jac-lens#2-graph-navigation | 2. Graph Navigation
https://www.jac-lang.org/learn/jac-lens#3-node-management | 3. Node Management
https://www.jac-lang.org/learn/jac-lens#4-session-management | 4. Session Management
https://www.jac-lang.org/learn/jac-lens#features-overview | Features Overview
https://www.jac-lang.org/learn/jac-lens#troubleshooting | Troubleshooting
https://www.jac-lang.org/learn/jac-lens#common-issues | Common Issues
https://www.jac-lang.org/learn/jac-lens#getting-help | Getting Help

# Jac Language Command Line Interface (CLI) (https://www.jac-lang.org/learn/tools/cli/)
https://www.jac-lang.org/learn/tools/cli#jac-tool | jac tool
https://www.jac-lang.org/learn/tools/cli#jac-run | jac run
https://www.jac-lang.org/learn/tools/cli#jac-clean | jac clean
https://www.jac-lang.org/learn/tools/cli#jac-format | jac format
https://www.jac-lang.org/learn/tools/cli#jac-check | jac check
https://www.jac-lang.org/learn/tools/cli#jac-build | jac build
https://www.jac-lang.org/learn/tools/cli#jac-enter | jac enter
https://www.jac-lang.org/learn/tools/cli#jac-test | jac test
https://www.jac-lang.org/learn/tools/cli#jac-language-command-line-interface-cli | Jac Language Command Line Interface (CLI)#

# Jac Keywords (https://www.jac-lang.org/learn/keywords/)
https://www.jac-lang.org/learn/keywords#1-archetype-and-data-structure-keywords | 1. Archetype and Data Structure Keywords
https://www.jac-lang.org/learn/keywords#2-variable-and-state-declaration-keywords | 2. Variable and State Declaration Keywords
https://www.jac-lang.org/learn/keywords#3-ability-and-function-keywords | 3. Ability and Function Keywords
https://www.jac-lang.org/learn/keywords#4-control-flow-and-logic-keywords | 4. Control Flow and Logic Keywords
https://www.jac-lang.org/learn/keywords#5-walker-specific-control-keywords | 5. Walker-Specific Control Keywords
https://www.jac-lang.org/learn/keywords#6-concurrency-and-asynchronous-keywords | 6. Concurrency and Asynchronous Keywords
https://www.jac-lang.org/learn/keywords#7-ai-and-language-model-integration | 7. AI and Language Model Integration
https://www.jac-lang.org/learn/keywords#8-miscellaneous-keywords | 8. Miscellaneous Keywords
https://www.jac-lang.org/learn/keywords#jac-programming-language-keyword-reference | Jac Programming Language Keyword Reference#

# Object (https://www.jac-lang.org/learn/dspfoundation/)
https://www.jac-lang.org/learn/dspfoundation#by-jason-mars-original-paper-on-arxiv | By Jason Mars (Original Paper on Arxiv)
https://www.jac-lang.org/learn/dspfoundation#introduction | Introduction
https://www.jac-lang.org/learn/dspfoundation#object-spatial-topological-semantics | Object-Spatial Topological Semantics
https://www.jac-lang.org/learn/dspfoundation#unified-notation | Unified Notation
https://www.jac-lang.org/learn/dspfoundation#archetypes-of-classes | Archetypes of Classes
https://www.jac-lang.org/learn/dspfoundation#formalization | Formalization
https://www.jac-lang.org/learn/dspfoundation#path-collections-mathcalp-and-walker-destination-queues-q_w | Path Collections (\(\mathcal{P}\)) and Walker Destination Queues (\(Q_w\))
https://www.jac-lang.org/learn/dspfoundation#path-collections | Path Collections
https://www.jac-lang.org/learn/dspfoundation#path-construction | Path Construction
https://www.jac-lang.org/learn/dspfoundation#walker-destination-queues | Walker Destination Queues
https://www.jac-lang.org/learn/dspfoundation#abilities | Abilities
https://www.jac-lang.org/learn/dspfoundation#ability-execution-order | Ability Execution Order
https://www.jac-lang.org/learn/dspfoundation#self-and-contextual-references | Self and Contextual References
https://www.jac-lang.org/learn/dspfoundation#complete-topological-structure | Complete Topological Structure
https://www.jac-lang.org/learn/dspfoundation#object-spatial-execution-semantics | Object-Spatial Execution Semantics
https://www.jac-lang.org/learn/dspfoundation#instantiation-rules | Instantiation Rules
https://www.jac-lang.org/learn/dspfoundation#lifecycle-management | Lifecycle Management
https://www.jac-lang.org/learn/dspfoundation#spawn-operator-rightarrow | Spawn Operator (\(\Rightarrow\))
https://www.jac-lang.org/learn/dspfoundation#visit-statement-triangleright | Visit Statement (\(\triangleright\))
https://www.jac-lang.org/learn/dspfoundation#additional-flow-control-statements | Additional Flow Control Statements
https://www.jac-lang.org/learn/dspfoundation#implementation-considerations | Implementation Considerations
https://www.jac-lang.org/learn/dspfoundation#type-safety | Type Safety
https://www.jac-lang.org/learn/dspfoundation#concurrency | Concurrency
https://www.jac-lang.org/learn/dspfoundation#efficiency | Efficiency
https://www.jac-lang.org/learn/dspfoundation#integration | Integration
https://www.jac-lang.org/learn/dspfoundation#walker-state-management | Walker State Management
https://www.jac-lang.org/learn/dspfoundation#entryexit-ability-optimization | Entry/Exit Ability Optimization
https://www.jac-lang.org/learn/dspfoundation#edge-transition-management | Edge Transition Management
https://www.jac-lang.org/learn/dspfoundation#flow-control-semantics | Flow Control Semantics
https://www.jac-lang.org/learn/dspfoundation#data-locality-and-caching | Data Locality and Caching
https://www.jac-lang.org/learn/dspfoundation#object-spatial-programming-a-topological-approach-to-computation | Object-Spatial Programming: A Topological Approach to Computation#

# Full Language Specification (https://www.jac-lang.org/learn/jac_ref/)
https://www.jac-lang.org/learn/jac_ref#whitespace | Whitespace
https://www.jac-lang.org/learn/jac_ref#comments | Comments
https://www.jac-lang.org/learn/jac_ref#base-module-structure | Base Module structure
https://www.jac-lang.org/learn/jac_ref#importinclude-statements | Import/Include Statements
https://www.jac-lang.org/learn/jac_ref#standard-import | Standard Import
https://www.jac-lang.org/learn/jac_ref#selective-import-with-curly-braces | Selective Import with Curly Braces
https://www.jac-lang.org/learn/jac_ref#include-statement | Include Statement
https://www.jac-lang.org/learn/jac_ref#module-resolution | Module Resolution
https://www.jac-lang.org/learn/jac_ref#interface-and-implementation-separation | Interface and Implementation Separation
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial-programming | Integration with Object-Spatial Programming
https://www.jac-lang.org/learn/jac_ref#application-bundling | Application Bundling
https://www.jac-lang.org/learn/jac_ref#archetypes | Archetypes
https://www.jac-lang.org/learn/jac_ref#archetype-types | Archetype Types
https://www.jac-lang.org/learn/jac_ref#implementation-details | Implementation Details
https://www.jac-lang.org/learn/jac_ref#class-vs-object-spatial-archetypes | Class vs Object-Spatial Archetypes
https://www.jac-lang.org/learn/jac_ref#constructor-rules-and-has-variables | Constructor Rules and Has Variables
https://www.jac-lang.org/learn/jac_ref#inheritance-and-composition | Inheritance and Composition
https://www.jac-lang.org/learn/jac_ref#decorators-and-metaprogramming | Decorators and Metaprogramming
https://www.jac-lang.org/learn/jac_ref#access-control | Access Control
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#async-walker | Async Walker
https://www.jac-lang.org/learn/jac_ref#archetype-bodies | Archetype bodies
https://www.jac-lang.org/learn/jac_ref#member-declaration-syntax | Member Declaration Syntax
https://www.jac-lang.org/learn/jac_ref#instance-and-static-members | Instance and Static Members
https://www.jac-lang.org/learn/jac_ref#ability-definitions | Ability Definitions
https://www.jac-lang.org/learn/jac_ref#access-control-modifiers | Access Control Modifiers
https://www.jac-lang.org/learn/jac_ref#object-spatial-archetype-bodies | Object-Spatial Archetype Bodies
https://www.jac-lang.org/learn/jac_ref#constructor-patterns | Constructor Patterns
https://www.jac-lang.org/learn/jac_ref#method-overriding-and-inheritance | Method Overriding and Inheritance
https://www.jac-lang.org/learn/jac_ref#integration-with-implementation-blocks | Integration with Implementation Blocks
https://www.jac-lang.org/learn/jac_ref#documentation-and-metadata | Documentation and Metadata
https://www.jac-lang.org/learn/jac_ref#enumerations | Enumerations
https://www.jac-lang.org/learn/jac_ref#basic-enumeration-declaration | Basic Enumeration Declaration
https://www.jac-lang.org/learn/jac_ref#access-control_1 | Access Control
https://www.jac-lang.org/learn/jac_ref#member-properties | Member Properties
https://www.jac-lang.org/learn/jac_ref#implementation-blocks | Implementation Blocks
https://www.jac-lang.org/learn/jac_ref#integration-with-decorators | Integration with Decorators
https://www.jac-lang.org/learn/jac_ref#usage-in-object-spatial-contexts | Usage in Object-Spatial Contexts
https://www.jac-lang.org/learn/jac_ref#functions-and-abilities | Functions and Abilities
https://www.jac-lang.org/learn/jac_ref#omission-of-gratuitous-self | Omission of Gratuitous self
https://www.jac-lang.org/learn/jac_ref#function-definitions | Function Definitions
https://www.jac-lang.org/learn/jac_ref#abilities | Abilities
https://www.jac-lang.org/learn/jac_ref#access-control_2 | Access Control
https://www.jac-lang.org/learn/jac_ref#static-methods | Static Methods
https://www.jac-lang.org/learn/jac_ref#abstract-declarations | Abstract Declarations
https://www.jac-lang.org/learn/jac_ref#implementation-separation | Implementation Separation
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_1 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#parameter-patterns | Parameter Patterns
https://www.jac-lang.org/learn/jac_ref#asynchronous-operations | Asynchronous Operations
https://www.jac-lang.org/learn/jac_ref#implementations | Implementations
https://www.jac-lang.org/learn/jac_ref#implementation-concept | Implementation Concept
https://www.jac-lang.org/learn/jac_ref#comparison-with-traditional-approaches | Comparison with Traditional Approaches
https://www.jac-lang.org/learn/jac_ref#function-implementations | Function Implementations
https://www.jac-lang.org/learn/jac_ref#modern-impl-syntax | Modern impl Syntax
https://www.jac-lang.org/learn/jac_ref#legacy-colon-syntax | Legacy Colon Syntax
https://www.jac-lang.org/learn/jac_ref#object-implementations | Object Implementations
https://www.jac-lang.org/learn/jac_ref#modern-impl-syntax_1 | Modern impl Syntax
https://www.jac-lang.org/learn/jac_ref#legacy-colon-syntax_1 | Legacy Colon Syntax
https://www.jac-lang.org/learn/jac_ref#enumeration-implementations | Enumeration Implementations
https://www.jac-lang.org/learn/jac_ref#modern-impl-syntax_2 | Modern impl Syntax
https://www.jac-lang.org/learn/jac_ref#legacy-colon-syntax_2 | Legacy Colon Syntax
https://www.jac-lang.org/learn/jac_ref#test-implementations | Test Implementations
https://www.jac-lang.org/learn/jac_ref#complete-example | Complete Example
https://www.jac-lang.org/learn/jac_ref#file-organization-strategies | File Organization Strategies
https://www.jac-lang.org/learn/jac_ref#same-jac-file-as-declaration | Same .jac File as Declaration
https://www.jac-lang.org/learn/jac_ref#separate-implementation-files | Separate Implementation Files
https://www.jac-lang.org/learn/jac_ref#using-impljac-and-testjac-files | Using .impl.jac and .test.jac Files
https://www.jac-lang.org/learn/jac_ref#using-impl-and-test-folders | Using .impl and .test Folders
https://www.jac-lang.org/learn/jac_ref#benefits-of-implementation-separation | Benefits of Implementation Separation
https://www.jac-lang.org/learn/jac_ref#implementation-requirements | Implementation Requirements
https://www.jac-lang.org/learn/jac_ref#semstrings | Semstrings
https://www.jac-lang.org/learn/jac_ref#semantic-string-concept | Semantic String Concept
https://www.jac-lang.org/learn/jac_ref#comparison-with-traditional-approaches_1 | Comparison with Traditional Approaches
https://www.jac-lang.org/learn/jac_ref#function-semantic-strings | Function Semantic Strings
https://www.jac-lang.org/learn/jac_ref#object-and-property-semantic-strings | Object and Property Semantic Strings
https://www.jac-lang.org/learn/jac_ref#nested-object-semantic-strings | Nested Object Semantic Strings
https://www.jac-lang.org/learn/jac_ref#enumeration-semantic-strings | Enumeration Semantic Strings
https://www.jac-lang.org/learn/jac_ref#llm-integration | LLM Integration
https://www.jac-lang.org/learn/jac_ref#complete-example_1 | Complete Example
https://www.jac-lang.org/learn/jac_ref#file-organization-for-semantic-strings | File Organization for Semantic Strings
https://www.jac-lang.org/learn/jac_ref#same-file-organization | Same File Organization
https://www.jac-lang.org/learn/jac_ref#separate-semantic-files | Separate Semantic Files
https://www.jac-lang.org/learn/jac_ref#benefits-of-semantic-strings | Benefits of Semantic Strings
https://www.jac-lang.org/learn/jac_ref#global-variables | Global variables
https://www.jac-lang.org/learn/jac_ref#declaration-keywords | Declaration Keywords
https://www.jac-lang.org/learn/jac_ref#access-control-modifiers_1 | Access Control Modifiers
https://www.jac-lang.org/learn/jac_ref#syntax-and-usage | Syntax and Usage
https://www.jac-lang.org/learn/jac_ref#integration-with-entry-points | Integration with Entry Points
https://www.jac-lang.org/learn/jac_ref#common-usage-patterns | Common Usage Patterns
https://www.jac-lang.org/learn/jac_ref#free-code | Free code
https://www.jac-lang.org/learn/jac_ref#inline-python | Inline python
https://www.jac-lang.org/learn/jac_ref#tests | Tests
https://www.jac-lang.org/learn/jac_ref#syntax | Syntax
https://www.jac-lang.org/learn/jac_ref#basic-testing | Basic Testing
https://www.jac-lang.org/learn/jac_ref#testing-functions | Testing Functions
https://www.jac-lang.org/learn/jac_ref#testing-objects-and-classes | Testing Objects and Classes
https://www.jac-lang.org/learn/jac_ref#testing-graph-operations | Testing Graph Operations
https://www.jac-lang.org/learn/jac_ref#testing-walkers | Testing Walkers
https://www.jac-lang.org/learn/jac_ref#exception-testing | Exception Testing
https://www.jac-lang.org/learn/jac_ref#parameterized-testing | Parameterized Testing
https://www.jac-lang.org/learn/jac_ref#setup-and-teardown | Setup and Teardown
https://www.jac-lang.org/learn/jac_ref#testing-async-operations | Testing Async Operations
https://www.jac-lang.org/learn/jac_ref#test-organization | Test Organization
https://www.jac-lang.org/learn/jac_ref#best-practices | Best Practices
https://www.jac-lang.org/learn/jac_ref#running-tests | Running Tests
https://www.jac-lang.org/learn/jac_ref#integration-testing | Integration Testing
https://www.jac-lang.org/learn/jac_ref#codeblocks-and-statements | Codeblocks and Statements
https://www.jac-lang.org/learn/jac_ref#code-block-structure | Code Block Structure
https://www.jac-lang.org/learn/jac_ref#statement-categories | Statement Categories
https://www.jac-lang.org/learn/jac_ref#statement-termination | Statement Termination
https://www.jac-lang.org/learn/jac_ref#scope-and-visibility | Scope and Visibility
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial-constructs | Integration with Object-Spatial Constructs
https://www.jac-lang.org/learn/jac_ref#if-statements | If statements
https://www.jac-lang.org/learn/jac_ref#basic-conditional-syntax | Basic Conditional Syntax
https://www.jac-lang.org/learn/jac_ref#complete-conditional-structure | Complete Conditional Structure
https://www.jac-lang.org/learn/jac_ref#chained-comparison-operations | Chained Comparison Operations
https://www.jac-lang.org/learn/jac_ref#boolean-logic-integration | Boolean Logic Integration
https://www.jac-lang.org/learn/jac_ref#sequential-evaluation-behavior | Sequential Evaluation Behavior
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_2 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#type-safe-conditional-operations | Type-Safe Conditional Operations
https://www.jac-lang.org/learn/jac_ref#nested-conditional-patterns | Nested Conditional Patterns
https://www.jac-lang.org/learn/jac_ref#conditional-expression-support | Conditional Expression Support
https://www.jac-lang.org/learn/jac_ref#performance-optimization | Performance Optimization
https://www.jac-lang.org/learn/jac_ref#common-conditional-patterns | Common Conditional Patterns
https://www.jac-lang.org/learn/jac_ref#integration-with-graph-traversal | Integration with Graph Traversal
https://www.jac-lang.org/learn/jac_ref#while-statements | While statements
https://www.jac-lang.org/learn/jac_ref#for-statements | For statements
https://www.jac-lang.org/learn/jac_ref#for-loop-variants | For Loop Variants
https://www.jac-lang.org/learn/jac_ref#for-in-loop-syntax | For-In Loop Syntax
https://www.jac-lang.org/learn/jac_ref#string-and-character-iteration | String and Character Iteration
https://www.jac-lang.org/learn/jac_ref#range-based-iteration | Range-Based Iteration
https://www.jac-lang.org/learn/jac_ref#collection-iteration | Collection Iteration
https://www.jac-lang.org/learn/jac_ref#for-to-by-loop-syntax | For-To-By Loop Syntax
https://www.jac-lang.org/learn/jac_ref#for-to-by-examples | For-To-By Examples
https://www.jac-lang.org/learn/jac_ref#nested-loop-patterns | Nested Loop Patterns
https://www.jac-lang.org/learn/jac_ref#advanced-for-in-patterns | Advanced For-In Patterns
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_3 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#control-flow-integration | Control Flow Integration
https://www.jac-lang.org/learn/jac_ref#asynchronous-for-loops | Asynchronous For Loops
https://www.jac-lang.org/learn/jac_ref#performance-considerations | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#complex-iteration-patterns | Complex Iteration Patterns
https://www.jac-lang.org/learn/jac_ref#graph-traversal-patterns | Graph Traversal Patterns
https://www.jac-lang.org/learn/jac_ref#error-handling-in-loops | Error Handling in Loops
https://www.jac-lang.org/learn/jac_ref#best-practices_1 | Best Practices
https://www.jac-lang.org/learn/jac_ref#try-statements | Try statements
https://www.jac-lang.org/learn/jac_ref#syntax_1 | Syntax
https://www.jac-lang.org/learn/jac_ref#basic-exception-handling | Basic Exception Handling
https://www.jac-lang.org/learn/jac_ref#multiple-exception-types | Multiple Exception Types
https://www.jac-lang.org/learn/jac_ref#else-clause | Else Clause
https://www.jac-lang.org/learn/jac_ref#finally-clause | Finally Clause
https://www.jac-lang.org/learn/jac_ref#graph-operations-error-handling | Graph Operations Error Handling
https://www.jac-lang.org/learn/jac_ref#resource-management-pattern | Resource Management Pattern
https://www.jac-lang.org/learn/jac_ref#nested-try-blocks | Nested Try Blocks
https://www.jac-lang.org/learn/jac_ref#custom-exception-handling | Custom Exception Handling
https://www.jac-lang.org/learn/jac_ref#best-practices_2 | Best Practices
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial | Integration with Object-Spatial
https://www.jac-lang.org/learn/jac_ref#match-statements | Match statements
https://www.jac-lang.org/learn/jac_ref#syntax_2 | Syntax
https://www.jac-lang.org/learn/jac_ref#pattern-types | Pattern Types
https://www.jac-lang.org/learn/jac_ref#literal-patterns | Literal Patterns
https://www.jac-lang.org/learn/jac_ref#capture-patterns | Capture Patterns
https://www.jac-lang.org/learn/jac_ref#sequence-patterns | Sequence Patterns
https://www.jac-lang.org/learn/jac_ref#mapping-patterns | Mapping Patterns
https://www.jac-lang.org/learn/jac_ref#class-patterns | Class Patterns
https://www.jac-lang.org/learn/jac_ref#or-patterns | OR Patterns
https://www.jac-lang.org/learn/jac_ref#as-patterns | AS Patterns
https://www.jac-lang.org/learn/jac_ref#guard-conditions | Guard Conditions
https://www.jac-lang.org/learn/jac_ref#singleton-patterns | Singleton Patterns
https://www.jac-lang.org/learn/jac_ref#practical-example | Practical Example
https://www.jac-lang.org/learn/jac_ref#match-patterns | Match patterns
https://www.jac-lang.org/learn/jac_ref#match-literal-patterns | Match literal patterns
https://www.jac-lang.org/learn/jac_ref#basic-literal-pattern-syntax | Basic Literal Pattern Syntax
https://www.jac-lang.org/learn/jac_ref#supported-literal-types | Supported Literal Types
https://www.jac-lang.org/learn/jac_ref#object-spatial-pattern-matching | Object-Spatial Pattern Matching
https://www.jac-lang.org/learn/jac_ref#complex-literal-matching | Complex Literal Matching
https://www.jac-lang.org/learn/jac_ref#performance-considerations_1 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#best-practices_3 | Best Practices
https://www.jac-lang.org/learn/jac_ref#match-singleton-patterns | Match singleton patterns
https://www.jac-lang.org/learn/jac_ref#singleton-pattern-syntax | Singleton Pattern Syntax
https://www.jac-lang.org/learn/jac_ref#none-pattern-matching | None Pattern Matching
https://www.jac-lang.org/learn/jac_ref#boolean-pattern-matching | Boolean Pattern Matching
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_4 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#complex-singleton-usage | Complex Singleton Usage
https://www.jac-lang.org/learn/jac_ref#performance-considerations_2 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#best-practices_4 | Best Practices
https://www.jac-lang.org/learn/jac_ref#match-capture-patterns | Match capture patterns
https://www.jac-lang.org/learn/jac_ref#basic-capture-syntax | Basic Capture Syntax
https://www.jac-lang.org/learn/jac_ref#capture-with-guards | Capture with Guards
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_5 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#complex-structure-capture | Complex Structure Capture
https://www.jac-lang.org/learn/jac_ref#multiple-capture-patterns | Multiple Capture Patterns
https://www.jac-lang.org/learn/jac_ref#scope-and-performance | Scope and Performance
https://www.jac-lang.org/learn/jac_ref#best-practices_5 | Best Practices
https://www.jac-lang.org/learn/jac_ref#match-sequence-patterns | Match sequence patterns
https://www.jac-lang.org/learn/jac_ref#match-mapping-patterns | Match mapping patterns
https://www.jac-lang.org/learn/jac_ref#match-class-patterns | Match class patterns
https://www.jac-lang.org/learn/jac_ref#context-managers | Context managers
https://www.jac-lang.org/learn/jac_ref#syntax_3 | Syntax
https://www.jac-lang.org/learn/jac_ref#basic-usage | Basic Usage
https://www.jac-lang.org/learn/jac_ref#multiple-context-managers | Multiple Context Managers
https://www.jac-lang.org/learn/jac_ref#custom-context-managers | Custom Context Managers
https://www.jac-lang.org/learn/jac_ref#graph-lock-management | Graph Lock Management
https://www.jac-lang.org/learn/jac_ref#transaction-management | Transaction Management
https://www.jac-lang.org/learn/jac_ref#walker-state-management | Walker State Management
https://www.jac-lang.org/learn/jac_ref#async-context-managers | Async Context Managers
https://www.jac-lang.org/learn/jac_ref#graph-session-management | Graph Session Management
https://www.jac-lang.org/learn/jac_ref#temporary-state-changes | Temporary State Changes
https://www.jac-lang.org/learn/jac_ref#best-practices_6 | Best Practices
https://www.jac-lang.org/learn/jac_ref#common-patterns | Common Patterns
https://www.jac-lang.org/learn/jac_ref#resource-pool | Resource Pool
https://www.jac-lang.org/learn/jac_ref#nested-contexts | Nested Contexts
https://www.jac-lang.org/learn/jac_ref#optional-context | Optional Context
https://www.jac-lang.org/learn/jac_ref#global-and-nonlocal-statements | Global and nonlocal statements
https://www.jac-lang.org/learn/jac_ref#global-statement | Global Statement
https://www.jac-lang.org/learn/jac_ref#basic-usage_1 | Basic Usage
https://www.jac-lang.org/learn/jac_ref#multiple-global-variables | Multiple Global Variables
https://www.jac-lang.org/learn/jac_ref#nonlocal-statement | Nonlocal Statement
https://www.jac-lang.org/learn/jac_ref#nested-function-scopes | Nested Function Scopes
https://www.jac-lang.org/learn/jac_ref#in-walker-abilities | In Walker Abilities
https://www.jac-lang.org/learn/jac_ref#scope-resolution-rules | Scope Resolution Rules
https://www.jac-lang.org/learn/jac_ref#global-scope | Global Scope
https://www.jac-lang.org/learn/jac_ref#nonlocal-scope | Nonlocal Scope
https://www.jac-lang.org/learn/jac_ref#local-scope | Local Scope
https://www.jac-lang.org/learn/jac_ref#common-patterns_1 | Common Patterns
https://www.jac-lang.org/learn/jac_ref#configuration-management | Configuration Management
https://www.jac-lang.org/learn/jac_ref#counter-patterns | Counter Patterns
https://www.jac-lang.org/learn/jac_ref#state-accumulation | State Accumulation
https://www.jac-lang.org/learn/jac_ref#best-practices_7 | Best Practices
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial_1 | Integration with Object-Spatial
https://www.jac-lang.org/learn/jac_ref#object-spatial-typed-context-blocks | Object spatial typed context blocks
https://www.jac-lang.org/learn/jac_ref#syntax-and-structure | Syntax and Structure
https://www.jac-lang.org/learn/jac_ref#type-safety-in-data-spatial-operations | Type Safety in Data Spatial Operations
https://www.jac-lang.org/learn/jac_ref#return-type-enforcement | Return Type Enforcement
https://www.jac-lang.org/learn/jac_ref#integration-with-graph-traversal_1 | Integration with Graph Traversal
https://www.jac-lang.org/learn/jac_ref#nested-type-contexts | Nested Type Contexts
https://www.jac-lang.org/learn/jac_ref#return-statements | Return statements
https://www.jac-lang.org/learn/jac_ref#yield-statements | Yield statements
https://www.jac-lang.org/learn/jac_ref#raise-statements | Raise statements
https://www.jac-lang.org/learn/jac_ref#assert-statements | Assert statements
https://www.jac-lang.org/learn/jac_ref#check-statements | Check statements
https://www.jac-lang.org/learn/jac_ref#delete-statements | Delete statements
https://www.jac-lang.org/learn/jac_ref#syntax_4 | Syntax
https://www.jac-lang.org/learn/jac_ref#deleting-variables | Deleting Variables
https://www.jac-lang.org/learn/jac_ref#deleting-object-properties | Deleting Object Properties
https://www.jac-lang.org/learn/jac_ref#deleting-list-elements | Deleting List Elements
https://www.jac-lang.org/learn/jac_ref#deleting-dictionary-entries | Deleting Dictionary Entries
https://www.jac-lang.org/learn/jac_ref#deleting-nodes | Deleting Nodes
https://www.jac-lang.org/learn/jac_ref#deleting-edges | Deleting Edges
https://www.jac-lang.org/learn/jac_ref#graph-operations | Graph Operations
https://www.jac-lang.org/learn/jac_ref#edge-deletion-patterns | Edge Deletion Patterns
https://www.jac-lang.org/learn/jac_ref#cascading-deletions | Cascading Deletions
https://www.jac-lang.org/learn/jac_ref#memory-management | Memory Management
https://www.jac-lang.org/learn/jac_ref#best-practices_8 | Best Practices
https://www.jac-lang.org/learn/jac_ref#common-patterns_2 | Common Patterns
https://www.jac-lang.org/learn/jac_ref#filtered-node-deletion | Filtered Node Deletion
https://www.jac-lang.org/learn/jac_ref#conditional-edge-removal | Conditional Edge Removal
https://www.jac-lang.org/learn/jac_ref#safe-deletion | Safe Deletion
https://www.jac-lang.org/learn/jac_ref#report-statements | Report statements
https://www.jac-lang.org/learn/jac_ref#syntax_5 | Syntax
https://www.jac-lang.org/learn/jac_ref#purpose | Purpose
https://www.jac-lang.org/learn/jac_ref#basic-usage_2 | Basic Usage
https://www.jac-lang.org/learn/jac_ref#multiple-reports | Multiple Reports
https://www.jac-lang.org/learn/jac_ref#aggregating-results | Aggregating Results
https://www.jac-lang.org/learn/jac_ref#conditional-reporting | Conditional Reporting
https://www.jac-lang.org/learn/jac_ref#report-vs-return | Report vs Return
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial_2 | Integration with Object-Spatial
https://www.jac-lang.org/learn/jac_ref#advanced-patterns | Advanced Patterns
https://www.jac-lang.org/learn/jac_ref#path-tracking | Path Tracking
https://www.jac-lang.org/learn/jac_ref#hierarchical-aggregation | Hierarchical Aggregation
https://www.jac-lang.org/learn/jac_ref#best-practices_9 | Best Practices
https://www.jac-lang.org/learn/jac_ref#control-statements | Control statements
https://www.jac-lang.org/learn/jac_ref#basic-control-operations | Basic Control Operations
https://www.jac-lang.org/learn/jac_ref#object-spatial-walker-statements | Object spatial Walker statements
https://www.jac-lang.org/learn/jac_ref#visit-statement | Visit Statement
https://www.jac-lang.org/learn/jac_ref#ignore-statement | Ignore Statement
https://www.jac-lang.org/learn/jac_ref#disengage-statement | Disengage Statement
https://www.jac-lang.org/learn/jac_ref#traversal-control-patterns | Traversal Control Patterns
https://www.jac-lang.org/learn/jac_ref#visit-statements | Visit statements
https://www.jac-lang.org/learn/jac_ref#disengage-statements | Disengage statements
https://www.jac-lang.org/learn/jac_ref#assignments | Assignments
https://www.jac-lang.org/learn/jac_ref#basic-assignment-operations | Basic Assignment Operations
https://www.jac-lang.org/learn/jac_ref#explicit-variable-declaration | Explicit Variable Declaration
https://www.jac-lang.org/learn/jac_ref#typed-assignments | Typed Assignments
https://www.jac-lang.org/learn/jac_ref#augmented-assignment-operators | Augmented Assignment Operators
https://www.jac-lang.org/learn/jac_ref#destructuring-assignment | Destructuring Assignment
https://www.jac-lang.org/learn/jac_ref#object-spatial-assignment-patterns | Object-Spatial Assignment Patterns
https://www.jac-lang.org/learn/jac_ref#assignment-expression-evaluation | Assignment Expression Evaluation
https://www.jac-lang.org/learn/jac_ref#type-inference-and-validation | Type Inference and Validation
https://www.jac-lang.org/learn/jac_ref#assignment-in-control-structures | Assignment in Control Structures
https://www.jac-lang.org/learn/jac_ref#expressions | Expressions
https://www.jac-lang.org/learn/jac_ref#expression-hierarchy | Expression Hierarchy
https://www.jac-lang.org/learn/jac_ref#basic-expression-types | Basic Expression Types
https://www.jac-lang.org/learn/jac_ref#object-spatial-expression-integration | Object-Spatial Expression Integration
https://www.jac-lang.org/learn/jac_ref#type-safe-expression-evaluation | Type-Safe Expression Evaluation
https://www.jac-lang.org/learn/jac_ref#performance-considerations_3 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#concurrent-expressions | Concurrent expressions
https://www.jac-lang.org/learn/jac_ref#flow-modifier | Flow Modifier
https://www.jac-lang.org/learn/jac_ref#wait-modifier | Wait Modifier
https://www.jac-lang.org/learn/jac_ref#combined-usage | Combined Usage
https://www.jac-lang.org/learn/jac_ref#parallel-walker-spawning | Parallel Walker Spawning
https://www.jac-lang.org/learn/jac_ref#async-graph-operations | Async Graph Operations
https://www.jac-lang.org/learn/jac_ref#error-handling | Error Handling
https://www.jac-lang.org/learn/jac_ref#concurrency-patterns | Concurrency Patterns
https://www.jac-lang.org/learn/jac_ref#map-reduce-pattern | Map-Reduce Pattern
https://www.jac-lang.org/learn/jac_ref#pipeline-pattern | Pipeline Pattern
https://www.jac-lang.org/learn/jac_ref#best-practices_10 | Best Practices
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial_3 | Integration with Object-Spatial
https://www.jac-lang.org/learn/jac_ref#walrus-assignments | Walrus assignments
https://www.jac-lang.org/learn/jac_ref#basic-syntax | Basic Syntax
https://www.jac-lang.org/learn/jac_ref#common-use-cases | Common Use Cases
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_6 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#scope-and-type-safety | Scope and Type Safety
https://www.jac-lang.org/learn/jac_ref#best-practices_11 | Best Practices
https://www.jac-lang.org/learn/jac_ref#lambda-expressions | Lambda expressions
https://www.jac-lang.org/learn/jac_ref#pipe-expressions | Pipe expressions
https://www.jac-lang.org/learn/jac_ref#forward-pipe-operator | Forward Pipe Operator (|>)
https://www.jac-lang.org/learn/jac_ref#basic-transformation-chains | Basic Transformation Chains
https://www.jac-lang.org/learn/jac_ref#method-chaining-integration | Method Chaining Integration
https://www.jac-lang.org/learn/jac_ref#object-spatial-pipeline-integration | Object-Spatial Pipeline Integration
https://www.jac-lang.org/learn/jac_ref#multi-line-pipeline-formatting | Multi-line Pipeline Formatting
https://www.jac-lang.org/learn/jac_ref#error-safe-pipelines | Error-Safe Pipelines
https://www.jac-lang.org/learn/jac_ref#graph-traversal-pipelines | Graph Traversal Pipelines
https://www.jac-lang.org/learn/jac_ref#performance-considerations_4 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#functional-composition-patterns | Functional Composition Patterns
https://www.jac-lang.org/learn/jac_ref#pipe-back-expressions | Pipe back expressions
https://www.jac-lang.org/learn/jac_ref#backward-pipe-operator | Backward Pipe Operator (<|)
https://www.jac-lang.org/learn/jac_ref#use-cases | Use Cases
https://www.jac-lang.org/learn/jac_ref#building-processing-pipelines | Building Processing Pipelines
https://www.jac-lang.org/learn/jac_ref#partial-application-patterns | Partial Application Patterns
https://www.jac-lang.org/learn/jac_ref#combining-with-forward-pipes | Combining with Forward Pipes
https://www.jac-lang.org/learn/jac_ref#graph-operations_1 | Graph Operations
https://www.jac-lang.org/learn/jac_ref#function-composition | Function Composition
https://www.jac-lang.org/learn/jac_ref#precedence-and-grouping | Precedence and Grouping
https://www.jac-lang.org/learn/jac_ref#common-patterns_3 | Common Patterns
https://www.jac-lang.org/learn/jac_ref#builder-pattern | Builder Pattern
https://www.jac-lang.org/learn/jac_ref#middleware-chain | Middleware Chain
https://www.jac-lang.org/learn/jac_ref#data-validation-pipeline | Data Validation Pipeline
https://www.jac-lang.org/learn/jac_ref#best-practices_12 | Best Practices
https://www.jac-lang.org/learn/jac_ref#comparison-with-forward-pipe | Comparison with Forward Pipe
https://www.jac-lang.org/learn/jac_ref#bitwise-expressions | Bitwise expressions
https://www.jac-lang.org/learn/jac_ref#logical-and-compare-expressions | Logical and compare expressions
https://www.jac-lang.org/learn/jac_ref#comparison-operators | Comparison Operators
https://www.jac-lang.org/learn/jac_ref#logical-operators | Logical Operators
https://www.jac-lang.org/learn/jac_ref#short-circuit-evaluation | Short-Circuit Evaluation
https://www.jac-lang.org/learn/jac_ref#chained-comparisons | Chained Comparisons
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_7 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#type-safe-comparisons | Type-Safe Comparisons
https://www.jac-lang.org/learn/jac_ref#performance-considerations_5 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#elvis-operator | Elvis Operator
https://www.jac-lang.org/learn/jac_ref#arithmetic-expressions | Arithmetic expressions
https://www.jac-lang.org/learn/jac_ref#connect-expressions | Connect expressions
https://www.jac-lang.org/learn/jac_ref#atomic-expressions | Atomic expressions
https://www.jac-lang.org/learn/jac_ref#atomic-pipe-back-expressions | Atomic pipe back expressions
https://www.jac-lang.org/learn/jac_ref#object-spatial-spawn-expressions | Object spatial spawn expressions
https://www.jac-lang.org/learn/jac_ref#unpack-expressions | Unpack expressions
https://www.jac-lang.org/learn/jac_ref#iterable-unpacking | Iterable Unpacking
https://www.jac-lang.org/learn/jac_ref#mapping-unpacking | Mapping Unpacking
https://www.jac-lang.org/learn/jac_ref#function-call-unpacking | Function Call Unpacking
https://www.jac-lang.org/learn/jac_ref#mixed-argument-patterns | Mixed Argument Patterns
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial-operations | Integration with Object-Spatial Operations
https://www.jac-lang.org/learn/jac_ref#type-safety-and-validation | Type Safety and Validation
https://www.jac-lang.org/learn/jac_ref#performance-considerations_6 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#references-unused | References (unused)
https://www.jac-lang.org/learn/jac_ref#current-status | Current Status
https://www.jac-lang.org/learn/jac_ref#potential-reference-syntax | Potential Reference Syntax
https://www.jac-lang.org/learn/jac_ref#current-alternatives | Current Alternatives
https://www.jac-lang.org/learn/jac_ref#object-spatial-context | Object-Spatial Context
https://www.jac-lang.org/learn/jac_ref#future-considerations | Future Considerations
https://www.jac-lang.org/learn/jac_ref#documentation-purpose | Documentation Purpose
https://www.jac-lang.org/learn/jac_ref#object-spatial-calls | Object spatial calls
https://www.jac-lang.org/learn/jac_ref#spawn-operator-spawn | Spawn Operator (spawn)
https://www.jac-lang.org/learn/jac_ref#pipe-operators | Pipe Operators
https://www.jac-lang.org/learn/jac_ref#asynchronous-operations_1 | Asynchronous Operations
https://www.jac-lang.org/learn/jac_ref#integration-with-data-spatial-model | Integration with Data Spatial Model
https://www.jac-lang.org/learn/jac_ref#subscripted-and-dotted-expressions | Subscripted and dotted expressions
https://www.jac-lang.org/learn/jac_ref#attribute-access | Attribute Access
https://www.jac-lang.org/learn/jac_ref#null-safe-access | Null-Safe Access
https://www.jac-lang.org/learn/jac_ref#subscript-operations | Subscript Operations
https://www.jac-lang.org/learn/jac_ref#chained-access-patterns | Chained Access Patterns
https://www.jac-lang.org/learn/jac_ref#null-safe-subscripting | Null-Safe Subscripting
https://www.jac-lang.org/learn/jac_ref#integration-with-object-spatial-constructs_1 | Integration with Object-Spatial Constructs
https://www.jac-lang.org/learn/jac_ref#performance-considerations_7 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#error-handling_1 | Error Handling
https://www.jac-lang.org/learn/jac_ref#function-calls | Function calls
https://www.jac-lang.org/learn/jac_ref#atom | Atom
https://www.jac-lang.org/learn/jac_ref#collection-values | Collection values
https://www.jac-lang.org/learn/jac_ref#tuples-and-jac-tuples | Tuples and Jac Tuples
https://www.jac-lang.org/learn/jac_ref#positional-tuples | Positional Tuples
https://www.jac-lang.org/learn/jac_ref#keyword-tuples | Keyword Tuples
https://www.jac-lang.org/learn/jac_ref#pipeline-integration | Pipeline Integration
https://www.jac-lang.org/learn/jac_ref#mixed-tuple-syntax | Mixed Tuple Syntax
https://www.jac-lang.org/learn/jac_ref#destructuring-assignment_1 | Destructuring Assignment
https://www.jac-lang.org/learn/jac_ref#object-spatial-applications | Object-Spatial Applications
https://www.jac-lang.org/learn/jac_ref#performance-and-memory-considerations | Performance and Memory Considerations
https://www.jac-lang.org/learn/jac_ref#usage-guidelines | Usage Guidelines
https://www.jac-lang.org/learn/jac_ref#object-spatial-references | Object-Spatial References
https://www.jac-lang.org/learn/jac_ref#edge-reference-syntax | Edge Reference Syntax
https://www.jac-lang.org/learn/jac_ref#node-vs-edge-references | Node vs Edge References
https://www.jac-lang.org/learn/jac_ref#directional-navigation | Directional Navigation
https://www.jac-lang.org/learn/jac_ref#edge-connection-operations | Edge Connection Operations
https://www.jac-lang.org/learn/jac_ref#edge-disconnection-operations | Edge Disconnection Operations
https://www.jac-lang.org/learn/jac_ref#filtered-references | Filtered References
https://www.jac-lang.org/learn/jac_ref#integration-with-walker-traversal | Integration with Walker Traversal
https://www.jac-lang.org/learn/jac_ref#type-safe-graph-operations | Type-Safe Graph Operations
https://www.jac-lang.org/learn/jac_ref#dynamic-graph-construction | Dynamic Graph Construction
https://www.jac-lang.org/learn/jac_ref#edge-vs-node-traversal-behavior | Edge vs Node Traversal Behavior
https://www.jac-lang.org/learn/jac_ref#special-comprehensions | Special Comprehensions
https://www.jac-lang.org/learn/jac_ref#filter-comprehension | Filter comprehension
https://www.jac-lang.org/learn/jac_ref#assign-bulk-assign-comprehension | Assign (bulk-assign) comprehension
https://www.jac-lang.org/learn/jac_ref#names-and-references | Names and references
https://www.jac-lang.org/learn/jac_ref#standard-identifiers | Standard Identifiers
https://www.jac-lang.org/learn/jac_ref#keyword-escaping | Keyword Escaping
https://www.jac-lang.org/learn/jac_ref#special-references | Special References
https://www.jac-lang.org/learn/jac_ref#explicit-notation-for-special-variables | Explicit Notation for Special Variables
https://www.jac-lang.org/learn/jac_ref#object-spatial-reference-usage | Object-Spatial Reference Usage
https://www.jac-lang.org/learn/jac_ref#name-resolution-hierarchy | Name Resolution Hierarchy
https://www.jac-lang.org/learn/jac_ref#naming-conventions | Naming Conventions
https://www.jac-lang.org/learn/jac_ref#builtin-types | Builtin types
https://www.jac-lang.org/learn/jac_ref#implicit-typing-library | Implicit Typing Library
https://www.jac-lang.org/learn/jac_ref#f-string-tokens | f-string tokens
https://www.jac-lang.org/learn/jac_ref#basic-f-string-syntax | Basic F-String Syntax
https://www.jac-lang.org/learn/jac_ref#expression-embedding | Expression Embedding
https://www.jac-lang.org/learn/jac_ref#format-specifications | Format Specifications
https://www.jac-lang.org/learn/jac_ref#object-spatial-integration_8 | Object-Spatial Integration
https://www.jac-lang.org/learn/jac_ref#multi-line-f-strings | Multi-Line F-Strings
https://www.jac-lang.org/learn/jac_ref#complex-expressions | Complex Expressions
https://www.jac-lang.org/learn/jac_ref#performance-considerations_8 | Performance Considerations
https://www.jac-lang.org/learn/jac_ref#best-practices_13 | Best Practices
https://www.jac-lang.org/learn/jac_ref#lexer-tokens | Lexer Tokens
https://www.jac-lang.org/learn/jac_ref#token-categories | Token Categories
https://www.jac-lang.org/learn/jac_ref#operator-tokens | Operator Tokens
https://www.jac-lang.org/learn/jac_ref#literal-tokens | Literal Tokens
https://www.jac-lang.org/learn/jac_ref#special-reference-tokens | Special Reference Tokens
https://www.jac-lang.org/learn/jac_ref#delimiter-tokens | Delimiter Tokens
https://www.jac-lang.org/learn/jac_ref#comment-tokens | Comment Tokens
https://www.jac-lang.org/learn/jac_ref#identifier-rules | Identifier Rules
https://www.jac-lang.org/learn/jac_ref#lexical-analysis-process | Lexical Analysis Process
https://www.jac-lang.org/learn/jac_ref#jac-language-reference | Jac Language Reference#

# Nodes and Edges (https://www.jac-lang.org/learn/data_spatial/nodes_and_edges/)
https://www.jac-lang.org/learn/data_spatial/nodes_and_edges#nodes | Nodes
https://www.jac-lang.org/learn/data_spatial/nodes_and_edges#custom-node-types | Custom Node Types
https://www.jac-lang.org/learn/data_spatial/nodes_and_edges#abilities-in-nodes | Abilities in Nodes
https://www.jac-lang.org/learn/data_spatial/nodes_and_edges#connecting-nodes | Connecting Nodes
https://www.jac-lang.org/learn/data_spatial/nodes_and_edges#edges | Edges
https://www.jac-lang.org/learn/data_spatial/nodes_and_edges#nodes-and-edges | Nodes and Edges#

# Walkers (https://www.jac-lang.org/learn/data_spatial/walkers/)
https://www.jac-lang.org/learn/data_spatial/walkers#spawning-a-walker | Spawning a Walker
https://www.jac-lang.org/learn/data_spatial/walkers#graph-traversal-using-visit | Graph Traversal Using Visit
https://www.jac-lang.org/learn/data_spatial/walkers#attributes-abilities | Attributes & Abilities
https://www.jac-lang.org/learn/data_spatial/walkers#reference-keywords | Reference Keywords:
https://www.jac-lang.org/learn/data_spatial/walkers#walkers-in-action | Walkers in Action:
https://www.jac-lang.org/learn/data_spatial/walkers#example | Example:
https://www.jac-lang.org/learn/data_spatial/walkers#walkers | Walkers#

# Node and Edge Filtering (https://www.jac-lang.org/learn/data_spatial/filtering/)
https://www.jac-lang.org/learn/data_spatial/filtering#node-based-filtering | Node-Based Filtering
https://www.jac-lang.org/learn/data_spatial/filtering#example | Example:
https://www.jac-lang.org/learn/data_spatial/filtering#edge-based-filtering | Edge-Based Filtering
https://www.jac-lang.org/learn/data_spatial/filtering#example_1 | Example:
https://www.jac-lang.org/learn/data_spatial/filtering#node-and-edge-filtering | Node and Edge Filtering#

# Walker and Node ability trigger sequence (https://www.jac-lang.org/learn/data_spatial/sequence/)
https://www.jac-lang.org/learn/data_spatial/sequence#walker-and-node-ability-trigger-sequence | Skip to content

# Release Notes (https://www.jac-lang.org/communityhub/release_notes/)
https://www.jac-lang.org/communityhub/release_notes#jaclang-087-jac-cloud-027-byllm-042-unreleased | jaclang 0.8.7 / jac-cloud 0.2.7 / byllm 0.4.2 (Unreleased)
https://www.jac-lang.org/communityhub/release_notes#jaclang-086-jac-cloud-026-byllm-041 | jaclang 0.8.6 / jac-cloud 0.2.6 / byllm 0.4.1
https://www.jac-lang.org/communityhub/release_notes#jaclang-085-jac-cloud-025-mtllm-040 | jaclang 0.8.5 / jac-cloud 0.2.5 / mtllm 0.4.0
https://www.jac-lang.org/communityhub/release_notes#jaclang-084-jac-cloud-024-mtllm-039 | jaclang 0.8.4 / jac-cloud 0.2.4 / mtllm 0.3.9
https://www.jac-lang.org/communityhub/release_notes#jaclang-083-jac-cloud-023-mtllm-038 | jaclang 0.8.3 / jac-cloud 0.2.3 / mtllm 0.3.8
https://www.jac-lang.org/communityhub/release_notes#jaclang-081-jac-cloud-021-mtllm-036 | jaclang 0.8.1 / jac-cloud 0.2.1 / mtllm 0.3.6
https://www.jac-lang.org/communityhub/release_notes#version-080 | Version 0.8.0
https://www.jac-lang.org/communityhub/release_notes#release-notes | Release Notes#

# Breaking Changes (https://www.jac-lang.org/communityhub/breaking_changes/)
https://www.jac-lang.org/communityhub/breaking_changes#latest-breaking-changes | Latest Breaking Changes
https://www.jac-lang.org/communityhub/breaking_changes#version-084 | Version 0.8.4
https://www.jac-lang.org/communityhub/breaking_changes#1-global-nonlocal-operators-updated-to-global-nonlocal | 1. Global, Nonlocal Operators Updated to global, nonlocal
https://www.jac-lang.org/communityhub/breaking_changes#2-mtllmllms-module-replaced-with-unified-mtllmllm-model | 2. mtllm.llms Module Replaced with Unified mtllm.llm {Model}
https://www.jac-lang.org/communityhub/breaking_changes#version-081 | Version 0.8.1
https://www.jac-lang.org/communityhub/breaking_changes#1-dotgen-builtin-function-is-now-name-printgraph | 1. dotgen builtin function is now name printgraph
https://www.jac-lang.org/communityhub/breaking_changes#2-ignore-feature-is-removed | 2. ignore feature is removed
https://www.jac-lang.org/communityhub/breaking_changes#version-080-main-branch-since-552025 | Version 0.8.0 (Main branch since 5/5/2025)
https://www.jac-lang.org/communityhub/breaking_changes#1-impl-keyword-introduced-to-simplify-implementation | 1. impl keyword introduced to simplify Implementation
https://www.jac-lang.org/communityhub/breaking_changes#2-inheritance-base-classes-specification-syntax-changed | 2. Inheritance base classes specification syntax changed
https://www.jac-lang.org/communityhub/breaking_changes#3-def-keyword-introduced | 3. def keyword introduced
https://www.jac-lang.org/communityhub/breaking_changes#4-visitor-keyword-introduced | 4. visitor keyword introduced
https://www.jac-lang.org/communityhub/breaking_changes#5-changes-to-lambda-syntax-and-lambda-instroduced | 5. Changes to lambda syntax and lambda instroduced
https://www.jac-lang.org/communityhub/breaking_changes#6-data-spatial-arrow-notation-updated | 6. Data spatial arrow notation updated
https://www.jac-lang.org/communityhub/breaking_changes#7-import-from-syntax-updated-for-clarity | 7. Import from syntax updated for clarity
https://www.jac-lang.org/communityhub/breaking_changes#8-import-statement-are-auto-resolved-no-language-hints-needed | 8. Import statement are auto resolved (no language hints needed)
https://www.jac-lang.org/communityhub/breaking_changes#9-restrict-and-unrestrict-interfaces-to-jac-machine-now-perm_grant-and-perm_revoke | 9. restrict and unrestrict Interfaces to Jac Machine now perm_grant and perm_revoke
https://www.jac-lang.org/communityhub/breaking_changes#breaking-changes | Breaking Changes#

# Project Ideas for the Jac Community (https://www.jac-lang.org/communityhub/fun/projects/)
https://www.jac-lang.org/communityhub/fun/projects#project-ideas-for-the-jac-community | Skip to content

# P1 (https://www.jac-lang.org/communityhub/fun/p1/)
https://www.jac-lang.org/communityhub/fun/p1#project-idea-rebuilding-aider-with-jac-and-agentic-object-spatial-programming | Project Idea: Rebuilding Aider with Jac and Agentic Object-Spatial Programming
https://www.jac-lang.org/communityhub/fun/p1#core-concepts | Core Concepts
https://www.jac-lang.org/communityhub/fun/p1#aiders-functionality | Aider's Functionality
https://www.jac-lang.org/communityhub/fun/p1#jacs-object-spatial-programming | Jac's Object-Spatial Programming
https://www.jac-lang.org/communityhub/fun/p1#jacs-byllm-by-llm | Jac's byLLM (by <llm>)
https://www.jac-lang.org/communityhub/fun/p1#understanding-aiders-current-architecture | Understanding Aider's Current Architecture
https://www.jac-lang.org/communityhub/fun/p1#jac-osp-value-proposition | Jac OSP Value Proposition
https://www.jac-lang.org/communityhub/fun/p1#proposed-osp-mode-implementation | Proposed OSP Mode Implementation
https://www.jac-lang.org/communityhub/fun/p1#key-osp-optimizations-for-aiders-core-components | Key OSP Optimizations for Aider's Core Components
https://www.jac-lang.org/communityhub/fun/p1#1-repository-map-enhancement | 1. Repository Map Enhancement
https://www.jac-lang.org/communityhub/fun/p1#proposed-osp-mode-implementation_1 | Proposed OSP Mode Implementation
https://www.jac-lang.org/communityhub/fun/p1#integration-with-existing-aider-commands | Integration with Existing Aider Commands
https://www.jac-lang.org/communityhub/fun/p1#expected-benefits-and-improvements | Expected Benefits and Improvements
https://www.jac-lang.org/communityhub/fun/p1#1-better-multi-file-editing | 1. Better Multi-File Editing
https://www.jac-lang.org/communityhub/fun/p1#2-optimized-token-usage | 2. Optimized Token Usage
https://www.jac-lang.org/communityhub/fun/p1#3-enhanced-code-understanding | 3. Enhanced Code Understanding
https://www.jac-lang.org/communityhub/fun/p1#4-improved-change-impact-analysis | 4. Improved Change Impact Analysis
https://www.jac-lang.org/communityhub/fun/p1#performance-benchmarks-and-metrics | Performance Benchmarks and Metrics
https://www.jac-lang.org/communityhub/fun/p1#practical-implementation-strategy | Practical Implementation Strategy
https://www.jac-lang.org/communityhub/fun/p1#phase-1-proof-of-concept | Phase 1: Proof of Concept
https://www.jac-lang.org/communityhub/fun/p1#phase-2-integration-with-aider | Phase 2: Integration with Aider
https://www.jac-lang.org/communityhub/fun/p1#phase-3-byllm-optimization | Phase 3: byLLM Optimization
https://www.jac-lang.org/communityhub/fun/p1#phase-4-advanced-features | Phase 4: Advanced Features
https://www.jac-lang.org/communityhub/fun/p1#getting-started | Getting Started
https://www.jac-lang.org/communityhub/fun/p1#advantages-of-the-osp-enhanced-approach | Advantages of the OSP-Enhanced Approach
https://www.jac-lang.org/communityhub/fun/p1#references-and-further-reading | References and Further Reading

# P2 (https://www.jac-lang.org/communityhub/fun/p2/)
https://www.jac-lang.org/communityhub/fun/p2#project-idea-codebase-genius | Project Idea: Codebase Genius
https://www.jac-lang.org/communityhub/fun/p2#project-scope | Project Scope
https://www.jac-lang.org/communityhub/fun/p2#core-functionalities | Core Functionalities
https://www.jac-lang.org/communityhub/fun/p2#high-level-workflow | High-Level Workflow
https://www.jac-lang.org/communityhub/fun/p2#workflow-steps | Workflow Steps
https://www.jac-lang.org/communityhub/fun/p2#proposed-architecture-a-multi-agent-system | Proposed Architecture: A Multi-Agent System
https://www.jac-lang.org/communityhub/fun/p2#components | Components
https://www.jac-lang.org/communityhub/fun/p2#agent-responsibilities | Agent Responsibilities
https://www.jac-lang.org/communityhub/fun/p2#code-genius-agent-supervisor | Code Genius Agent (Supervisor)
https://www.jac-lang.org/communityhub/fun/p2#repo-mapper | Repo Mapper
https://www.jac-lang.org/communityhub/fun/p2#code-analyzer | Code Analyzer
https://www.jac-lang.org/communityhub/fun/p2#docgenie | DocGenie
https://www.jac-lang.org/communityhub/fun/p2#documentation-strategy | Documentation Strategy
https://www.jac-lang.org/communityhub/fun/p2#1-initial-mapping | 1. Initial Mapping
https://www.jac-lang.org/communityhub/fun/p2#2-prioritized-exploration | 2. Prioritized Exploration
https://www.jac-lang.org/communityhub/fun/p2#3-backfill-coverage | 3. Backfill Coverage
https://www.jac-lang.org/communityhub/fun/p2#inputs-outputs | Inputs & Outputs
https://www.jac-lang.org/communityhub/fun/p2#final-notes | Final Notes
https://www.jac-lang.org/communityhub/fun/p2#good-luck | Good Luck!

# P3 (https://www.jac-lang.org/communityhub/fun/p3/)
https://www.jac-lang.org/communityhub/fun/p3#project-idea-auto-adaptive-fine-tuning-for-jac-byllm-using-rpg-game-generation | Project Idea: Auto-Adaptive Fine-tuning for Jac byLLM using RPG Game Generation
https://www.jac-lang.org/communityhub/fun/p3#problem-statement | Problem Statement
https://www.jac-lang.org/communityhub/fun/p3#proposed-solution | Proposed Solution

# Content Pieces (https://www.jac-lang.org/communityhub/content_pieces/)
https://www.jac-lang.org/communityhub/content_pieces#the-expression-problem | The Expression Problem
https://www.jac-lang.org/communityhub/content_pieces#traditional-oop-challenges | Traditional OOP Challenges
https://www.jac-lang.org/communityhub/content_pieces#problems-with-traditional-approach | Problems with Traditional Approach
https://www.jac-lang.org/communityhub/content_pieces#jacs-spatial-solution | Jac's Spatial Solution
https://www.jac-lang.org/communityhub/content_pieces#core-architecture | Core Architecture
https://www.jac-lang.org/communityhub/content_pieces#walker-declarations | Walker Declarations
https://www.jac-lang.org/communityhub/content_pieces#behavioral-operations-mainimpljac | Behavioral Operations (main.impl.jac)
https://www.jac-lang.org/communityhub/content_pieces#price-and-discount-operations | Price and Discount Operations
https://www.jac-lang.org/communityhub/content_pieces#shipping-operations | Shipping Operations
https://www.jac-lang.org/communityhub/content_pieces#tax-and-gift-operations | Tax and Gift Operations
https://www.jac-lang.org/communityhub/content_pieces#item-creation-and-usage | Item Creation and Usage
https://www.jac-lang.org/communityhub/content_pieces#adding-new-operations | Adding New Operations
https://www.jac-lang.org/communityhub/content_pieces#adding-new-item-properties | Adding New Item Properties
https://www.jac-lang.org/communityhub/content_pieces#benefits-of-the-spatial-approach | Benefits of the Spatial Approach
https://www.jac-lang.org/communityhub/content_pieces#modularity-and-separation-of-concerns | Modularity and Separation of Concerns
https://www.jac-lang.org/communityhub/content_pieces#extensibility | Extensibility
https://www.jac-lang.org/communityhub/content_pieces#maintainability | Maintainability
https://www.jac-lang.org/communityhub/content_pieces#comparison-with-traditional-approaches | Comparison with Traditional Approaches
https://www.jac-lang.org/communityhub/content_pieces#best-practices | Best Practices
https://www.jac-lang.org/communityhub/content_pieces#conclusion | Conclusion
https://www.jac-lang.org/communityhub/content_pieces#shopping-cart-object-spatial-programming-example | Shopping Cart: Object Spatial Programming Example#
https://www.jac-lang.org/communityhub/content_pieces#medical-software-startup | Medical Software Startup#
https://www.jac-lang.org/communityhub/content_pieces#uh-oh-a-new-requirement | Uh Oh... A New Requirement!#
https://www.jac-lang.org/communityhub/content_pieces#the-relationship-gets-complicated | The Relationship Gets Complicated#
https://www.jac-lang.org/communityhub/content_pieces#houston-we-have-a-communication-problem | Houston, We Have a Communication Problem#
https://www.jac-lang.org/communityhub/content_pieces#jac-to-the-rescue | JAC to the rescue!#
https://www.jac-lang.org/communityhub/content_pieces#step-1-modeling-data-as-a-graph | Step 1: Modeling Data as a Graph#
https://www.jac-lang.org/communityhub/content_pieces#step-2-creating-an-independent-processor | Step 2: Creating an Independent "Processor"#
https://www.jac-lang.org/communityhub/content_pieces#step-3-putting-it-all-together | Step 3: Putting It All Together#

# Contributing (https://www.jac-lang.org/internals/contrib/)
https://www.jac-lang.org/internals/contrib#general-setup-and-information | General Setup and Information
https://www.jac-lang.org/internals/contrib#run-docs-site-locally | Run docs site locally
https://www.jac-lang.org/internals/contrib#build-vscode-extention | Build VSCode Extention
https://www.jac-lang.org/internals/contrib#release-flow-for-the-empowered | Release Flow (for the empowered)
https://www.jac-lang.org/internals/contrib#contrib-and-codebase-guide | Contrib and Codebase Guide#

# Compiler/Runtime Design (https://www.jac-lang.org/internals/internals/)
https://www.jac-lang.org/internals/internals#architecture-overview | Architecture Overview
https://www.jac-lang.org/internals/internals#compiler-components | Compiler Components
https://www.jac-lang.org/internals/internals#compilation-pipeline | Compilation Pipeline
https://www.jac-lang.org/internals/internals#key-compiler-components | Key Compiler Components
https://www.jac-lang.org/internals/internals#jacprogram | JacProgram
https://www.jac-lang.org/internals/internals#unitree | Unitree
https://www.jac-lang.org/internals/internals#compiler-components-relationship | Compiler Components Relationship
https://www.jac-lang.org/internals/internals#compiler-passes | Compiler Passes
https://www.jac-lang.org/internals/internals#runtime-components | Runtime Components
https://www.jac-lang.org/internals/internals#jacmachine | JacMachine
https://www.jac-lang.org/internals/internals#jacmachine_1 | JacMachine
https://www.jac-lang.org/internals/internals#executioncontext | ExecutionContext
https://www.jac-lang.org/internals/internals#memory-management | Memory Management
https://www.jac-lang.org/internals/internals#memory | Memory
https://www.jac-lang.org/internals/internals#shelfstorage | ShelfStorage
https://www.jac-lang.org/internals/internals#archetypes-and-anchors | Archetypes and Anchors
https://www.jac-lang.org/internals/internals#archetype | Archetype
https://www.jac-lang.org/internals/internals#anchor | Anchor
https://www.jac-lang.org/internals/internals#module-system | Module System
https://www.jac-lang.org/internals/internals#importers | Importers
https://www.jac-lang.org/internals/internals#import-process | Import Process
https://www.jac-lang.org/internals/internals#dynamic-updates | Dynamic Updates
https://www.jac-lang.org/internals/internals#updating-walkers | Updating Walkers
https://www.jac-lang.org/internals/internals#access-control | Access Control
https://www.jac-lang.org/internals/internals#permission | Permission
https://www.jac-lang.org/internals/internals#accesslevel | AccessLevel
https://www.jac-lang.org/internals/internals#contributing-to-jaclang | Contributing to Jaclang
https://www.jac-lang.org/internals/internals#understanding-the-codebase | Understanding the Codebase
https://www.jac-lang.org/internals/internals#development-workflow | Development Workflow
https://www.jac-lang.org/internals/internals#best-practices | Best Practices
https://www.jac-lang.org/internals/internals#conclusion | Conclusion
https://www.jac-lang.org/internals/internals#jaclang-internals | Jaclang Internals#

# Symbol Tables in Jaclang (https://www.jac-lang.org/internals/symbol_tables/)
https://www.jac-lang.org/internals/symbol_tables#overview | Overview
https://www.jac-lang.org/internals/symbol_tables#documentation-structure | Documentation Structure
https://www.jac-lang.org/internals/symbol_tables#symbol-table-in-the-compilation-pipeline | Symbol Table in the Compilation Pipeline
https://www.jac-lang.org/internals/symbol_tables#why-understanding-symbol-tables-matters | Why Understanding Symbol Tables Matters
https://www.jac-lang.org/internals/symbol_tables#symbol-tables-in-jaclang | Symbol Tables in Jaclang#

# Symbol Table Structure (https://www.jac-lang.org/internals/symbol_tables/structure/)
https://www.jac-lang.org/internals/symbol_tables/structure#core-components | Core Components
https://www.jac-lang.org/internals/symbol_tables/structure#uniscopenode | UniScopeNode
https://www.jac-lang.org/internals/symbol_tables/structure#symbol | Symbol
https://www.jac-lang.org/internals/symbol_tables/structure#inheritedsymboltable | InheritedSymbolTable
https://www.jac-lang.org/internals/symbol_tables/structure#nameatom | NameAtom
https://www.jac-lang.org/internals/symbol_tables/structure#symbol-table-hierarchy | Symbol Table Hierarchy
https://www.jac-lang.org/internals/symbol_tables/structure#symbol-lookup-process | Symbol Lookup Process
https://www.jac-lang.org/internals/symbol_tables/structure#symbol-access-levels | Symbol Access Levels
https://www.jac-lang.org/internals/symbol_tables/structure#symbol-types | Symbol Types
https://www.jac-lang.org/internals/symbol_tables/structure#practical-example | Practical Example
https://www.jac-lang.org/internals/symbol_tables/structure#symbol-table-structure | Symbol Table Structure#

# Symbol Table Building (https://www.jac-lang.org/internals/symbol_tables/building/)
https://www.jac-lang.org/internals/symbol_tables/building#the-symtabbuildpass | The SymTabBuildPass
https://www.jac-lang.org/internals/symbol_tables/building#key-mechanisms | Key Mechanisms
https://www.jac-lang.org/internals/symbol_tables/building#scope-stack-management | Scope Stack Management
https://www.jac-lang.org/internals/symbol_tables/building#scope-creation | Scope Creation
https://www.jac-lang.org/internals/symbol_tables/building#symbol-insertion | Symbol Insertion
https://www.jac-lang.org/internals/symbol_tables/building#special-symbol-handling | Special Symbol Handling
https://www.jac-lang.org/internals/symbol_tables/building#symbol-table-building-flow | Symbol Table Building Flow
https://www.jac-lang.org/internals/symbol_tables/building#symbol-resolution-in-symtabbuildpass | Symbol Resolution in SymTabBuildPass
https://www.jac-lang.org/internals/symbol_tables/building#example-building-symbol-tables-for-a-simple-program | Example: Building Symbol Tables for a Simple Program
https://www.jac-lang.org/internals/symbol_tables/building#conclusion | Conclusion
https://www.jac-lang.org/internals/symbol_tables/building#symbol-table-building | Symbol Table Building#

# Symbol Definition and Use (https://www.jac-lang.org/internals/symbol_tables/def_use/)
https://www.jac-lang.org/internals/symbol_tables/def_use#the-defusepass | The DefUsePass
https://www.jac-lang.org/internals/symbol_tables/def_use#key-mechanisms | Key Mechanisms
https://www.jac-lang.org/internals/symbol_tables/def_use#definition-tracking | Definition Tracking
https://www.jac-lang.org/internals/symbol_tables/def_use#use-resolution | Use Resolution
https://www.jac-lang.org/internals/symbol_tables/def_use#chain-resolution | Chain Resolution
https://www.jac-lang.org/internals/symbol_tables/def_use#def-use-resolution-flow | Def-Use Resolution Flow
https://www.jac-lang.org/internals/symbol_tables/def_use#handling-special-cases | Handling Special Cases
https://www.jac-lang.org/internals/symbol_tables/def_use#archetype-inheritance | Archetype Inheritance
https://www.jac-lang.org/internals/symbol_tables/def_use#context-setting-for-python-compilation | Context Setting for Python Compilation
https://www.jac-lang.org/internals/symbol_tables/def_use#example-def-use-resolution | Example: Def-Use Resolution
https://www.jac-lang.org/internals/symbol_tables/def_use#conclusion | Conclusion
https://www.jac-lang.org/internals/symbol_tables/def_use#symbol-definition-and-use | Symbol Definition and Use#

# Symbol Table Linking (https://www.jac-lang.org/internals/symbol_tables/linking/)
https://www.jac-lang.org/internals/symbol_tables/linking#the-symtablinkpass | The SymTabLinkPass
https://www.jac-lang.org/internals/symbol_tables/linking#key-mechanisms | Key Mechanisms
https://www.jac-lang.org/internals/symbol_tables/linking#import-resolution | Import Resolution
https://www.jac-lang.org/internals/symbol_tables/linking#module-path-resolution | Module Path Resolution
https://www.jac-lang.org/internals/symbol_tables/linking#import-style-detection | Import Style Detection
https://www.jac-lang.org/internals/symbol_tables/linking#symbol-list-extraction | Symbol List Extraction
https://www.jac-lang.org/internals/symbol_tables/linking#all-import-handling | All Import Handling
https://www.jac-lang.org/internals/symbol_tables/linking#selective-import-handling | Selective Import Handling
https://www.jac-lang.org/internals/symbol_tables/linking#symbol-table-linking-flow | Symbol Table Linking Flow
https://www.jac-lang.org/internals/symbol_tables/linking#cross-module-symbol-lookup | Cross-Module Symbol Lookup
https://www.jac-lang.org/internals/symbol_tables/linking#the-inheritedsymboltable | The InheritedSymbolTable
https://www.jac-lang.org/internals/symbol_tables/linking#example-module-linking | Example: Module Linking
https://www.jac-lang.org/internals/symbol_tables/linking#conclusion | Conclusion
https://www.jac-lang.org/internals/symbol_tables/linking#symbol-table-linking | Symbol Table Linking#

# Symbol Resolution in Practice (https://www.jac-lang.org/internals/symbol_tables/resolution/)
https://www.jac-lang.org/internals/symbol_tables/resolution#the-symbol-resolution-process | The Symbol Resolution Process
https://www.jac-lang.org/internals/symbol_tables/resolution#common-resolution-scenarios | Common Resolution Scenarios
https://www.jac-lang.org/internals/symbol_tables/resolution#local-variable-resolution | Local Variable Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#member-access-resolution | Member Access Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#cross-module-resolution | Cross-Module Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#selective-import-resolution | Selective Import Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#nested-scopes-resolution | Nested Scopes Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#object-oriented-method-resolution | Object-Oriented Method Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#import-with-alias-resolution | Import with Alias Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#complex-resolution-scenarios | Complex Resolution Scenarios
https://www.jac-lang.org/internals/symbol_tables/resolution#multi-level-member-access | Multi-Level Member Access
https://www.jac-lang.org/internals/symbol_tables/resolution#inheritance-and-shadow-variables | Inheritance and Shadow Variables
https://www.jac-lang.org/internals/symbol_tables/resolution#import-conflicts-resolution | Import Conflicts Resolution
https://www.jac-lang.org/internals/symbol_tables/resolution#visualization-of-symbol-resolution-in-a-complete-program | Visualization of Symbol Resolution in a Complete Program
https://www.jac-lang.org/internals/symbol_tables/resolution#conclusion | Conclusion
https://www.jac-lang.org/internals/symbol_tables/resolution#symbol-resolution-in-practice | Symbol Resolution in Practice#

# UniIR Nodes (https://www.jac-lang.org/internals/uniir_node/)
https://www.jac-lang.org/internals/uniir_node#enum | Enum
https://www.jac-lang.org/internals/uniir_node#name | Name
https://www.jac-lang.org/internals/uniir_node#subtag | SubTag
https://www.jac-lang.org/internals/uniir_node#module | Module
https://www.jac-lang.org/internals/uniir_node#globalvars | GlobalVars
https://www.jac-lang.org/internals/uniir_node#test | Test
https://www.jac-lang.org/internals/uniir_node#modulecode | ModuleCode
https://www.jac-lang.org/internals/uniir_node#pyinlinecode | PyInlineCode
https://www.jac-lang.org/internals/uniir_node#import | Import
https://www.jac-lang.org/internals/uniir_node#modulepath | ModulePath
https://www.jac-lang.org/internals/uniir_node#moduleitem | ModuleItem
https://www.jac-lang.org/internals/uniir_node#archetype | Archetype
https://www.jac-lang.org/internals/uniir_node#impldef | ImplDef
https://www.jac-lang.org/internals/uniir_node#semdef | SemDef
https://www.jac-lang.org/internals/uniir_node#ability | Ability
https://www.jac-lang.org/internals/uniir_node#funcsignature | FuncSignature
https://www.jac-lang.org/internals/uniir_node#eventsignature | EventSignature
https://www.jac-lang.org/internals/uniir_node#paramvar | ParamVar
https://www.jac-lang.org/internals/uniir_node#archhas | ArchHas
https://www.jac-lang.org/internals/uniir_node#hasvar | HasVar
https://www.jac-lang.org/internals/uniir_node#typedctxblock | TypedCtxBlock
https://www.jac-lang.org/internals/uniir_node#ifstmt | IfStmt
https://www.jac-lang.org/internals/uniir_node#elseif | ElseIf
https://www.jac-lang.org/internals/uniir_node#elsestmt | ElseStmt
https://www.jac-lang.org/internals/uniir_node#exprstmt | ExprStmt
https://www.jac-lang.org/internals/uniir_node#trystmt | TryStmt
https://www.jac-lang.org/internals/uniir_node#except | Except
https://www.jac-lang.org/internals/uniir_node#finallystmt | FinallyStmt
https://www.jac-lang.org/internals/uniir_node#iterforstmt | IterForStmt
https://www.jac-lang.org/internals/uniir_node#inforstmt | InForStmt
https://www.jac-lang.org/internals/uniir_node#whilestmt | WhileStmt
https://www.jac-lang.org/internals/uniir_node#withstmt | WithStmt
https://www.jac-lang.org/internals/uniir_node#exprasitem | ExprAsItem
https://www.jac-lang.org/internals/uniir_node#raisestmt | RaiseStmt
https://www.jac-lang.org/internals/uniir_node#assertstmt | AssertStmt
https://www.jac-lang.org/internals/uniir_node#checkstmt | CheckStmt
https://www.jac-lang.org/internals/uniir_node#ctrlstmt | CtrlStmt
https://www.jac-lang.org/internals/uniir_node#deletestmt | DeleteStmt
https://www.jac-lang.org/internals/uniir_node#reportstmt | ReportStmt
https://www.jac-lang.org/internals/uniir_node#returnstmt | ReturnStmt
https://www.jac-lang.org/internals/uniir_node#visitstmt | VisitStmt
https://www.jac-lang.org/internals/uniir_node#awaitexpr | AwaitExpr
https://www.jac-lang.org/internals/uniir_node#globalstmt | GlobalStmt
https://www.jac-lang.org/internals/uniir_node#nonlocalstmt | NonLocalStmt
https://www.jac-lang.org/internals/uniir_node#assignment | Assignment
https://www.jac-lang.org/internals/uniir_node#concurrentexpr | ConcurrentExpr
https://www.jac-lang.org/internals/uniir_node#binaryexpr | BinaryExpr
https://www.jac-lang.org/internals/uniir_node#compareexpr | CompareExpr
https://www.jac-lang.org/internals/uniir_node#bool | Bool
https://www.jac-lang.org/internals/uniir_node#boolexpr | BoolExpr
https://www.jac-lang.org/internals/uniir_node#lambdaexpr | LambdaExpr
https://www.jac-lang.org/internals/uniir_node#unaryexpr | UnaryExpr
https://www.jac-lang.org/internals/uniir_node#ifelseexpr | IfElseExpr
https://www.jac-lang.org/internals/uniir_node#multistring | MultiString
https://www.jac-lang.org/internals/uniir_node#fstring | FString
https://www.jac-lang.org/internals/uniir_node#listval | ListVal
https://www.jac-lang.org/internals/uniir_node#setval | SetVal
https://www.jac-lang.org/internals/uniir_node#tupleval | TupleVal
https://www.jac-lang.org/internals/uniir_node#dictval | DictVal
https://www.jac-lang.org/internals/uniir_node#kvpair | KVPair
https://www.jac-lang.org/internals/uniir_node#kwpair | KWPair
https://www.jac-lang.org/internals/uniir_node#innercompr | InnerCompr
https://www.jac-lang.org/internals/uniir_node#listcompr | ListCompr
https://www.jac-lang.org/internals/uniir_node#gencompr | GenCompr
https://www.jac-lang.org/internals/uniir_node#setcompr | SetCompr
https://www.jac-lang.org/internals/uniir_node#dictcompr | DictCompr
https://www.jac-lang.org/internals/uniir_node#atomtrailer | AtomTrailer
https://www.jac-lang.org/internals/uniir_node#atomunit | AtomUnit
https://www.jac-lang.org/internals/uniir_node#yieldexpr | YieldExpr
https://www.jac-lang.org/internals/uniir_node#funccall | FuncCall
https://www.jac-lang.org/internals/uniir_node#indexslice | IndexSlice
https://www.jac-lang.org/internals/uniir_node#typeref | TypeRef
https://www.jac-lang.org/internals/uniir_node#edgereftrailer | EdgeRefTrailer
https://www.jac-lang.org/internals/uniir_node#edgeopref | EdgeOpRef
https://www.jac-lang.org/internals/uniir_node#disconnectop | DisconnectOp
https://www.jac-lang.org/internals/uniir_node#connectop | ConnectOp
https://www.jac-lang.org/internals/uniir_node#filtercompr | FilterCompr
https://www.jac-lang.org/internals/uniir_node#assigncompr | AssignCompr
https://www.jac-lang.org/internals/uniir_node#matchstmt | MatchStmt
https://www.jac-lang.org/internals/uniir_node#matchcase | MatchCase
https://www.jac-lang.org/internals/uniir_node#matchor | MatchOr
https://www.jac-lang.org/internals/uniir_node#matchas | MatchAs
https://www.jac-lang.org/internals/uniir_node#matchvalue | MatchValue
https://www.jac-lang.org/internals/uniir_node#matchsingleton | MatchSingleton
https://www.jac-lang.org/internals/uniir_node#matchsequence | MatchSequence
https://www.jac-lang.org/internals/uniir_node#matchmapping | MatchMapping
https://www.jac-lang.org/internals/uniir_node#matchkvpair | MatchKVPair
https://www.jac-lang.org/internals/uniir_node#matchstar | MatchStar
https://www.jac-lang.org/internals/uniir_node#matcharch | MatchArch
https://www.jac-lang.org/internals/uniir_node#token | Token
https://www.jac-lang.org/internals/uniir_node#specialvarref | SpecialVarRef
https://www.jac-lang.org/internals/uniir_node#builtintype | BuiltinType
https://www.jac-lang.org/internals/uniir_node#float | Float
https://www.jac-lang.org/internals/uniir_node#int | Int
https://www.jac-lang.org/internals/uniir_node#string | String
https://www.jac-lang.org/internals/uniir_node#null | Null
https://www.jac-lang.org/internals/uniir_node#ellipsis | Ellipsis
https://www.jac-lang.org/internals/uniir_node#semi | Semi
https://www.jac-lang.org/internals/uniir_node#commenttoken | CommentToken

# Runtime Plugin Interface (https://www.jac-lang.org/internals/jac_plugins/)
https://www.jac-lang.org/internals/jac_plugins#what-is-a-jac-plugin | What is a JAC Plugin?
https://www.jac-lang.org/internals/jac_plugins#how-to-create-a-jac-plugin | How to Create a JAC Plugin?
https://www.jac-lang.org/internals/jac_plugins#next-steps | Next Steps
https://www.jac-lang.org/internals/jac_plugins#jac-plugins | Jac Plugins#

# main py plugin Interface (https://www.jac-lang.org/internals/plugin_documentation/)
https://www.jac-lang.org/internals/plugin_documentation#overview | Overview
https://www.jac-lang.org/internals/plugin_documentation#what-is-pluggy | What is Pluggy?
https://www.jac-lang.org/internals/plugin_documentation#plugin-architecture-class-implementation | Plugin Architecture class implementation
https://www.jac-lang.org/internals/plugin_documentation#classes-implemented | Classes Implemented
https://www.jac-lang.org/internals/plugin_documentation#good-example-to-understand-the-3-classes-and-use-of-proxy-class | good example to understand the 3 classes and use of proxy class
https://www.jac-lang.org/internals/plugin_documentation#what-does-jacmachineinterface-class-do | What does JacmachineInterface class do
https://www.jac-lang.org/internals/plugin_documentation#inherited-static-classes | Inherited Static Classes
https://www.jac-lang.org/internals/plugin_documentation#how-to-implement-a-plugin | How to Implement a Plugin
https://www.jac-lang.org/internals/plugin_documentation#step-1-define-an-implementation-method-with-hookimpl | Step 1: Define an Implementation Method with @hookimpl
https://www.jac-lang.org/internals/plugin_documentation#step-2-register-your-plugin-with-the-plugin-manager | Step 2: Register Your Plugin with the Plugin Manager
https://www.jac-lang.org/internals/plugin_documentation#static-methods-that-can-be-plugged-in | Static Methods that can be plugged in
https://www.jac-lang.org/internals/plugin_documentation#plugin-foundation-documentation | Plugin Foundation Documentation#

# Language Ref Roadmap (https://www.jac-lang.org/internals/planning_specs/ref_roadmap/)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-1-base-module-structure | Section 1: Base Module structure
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-2-importinclude-statements | Section 2: Import/Include Statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-3-archetypes | Section 3: Archetypes
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-4-archetype-bodies | Section 4: Archetype bodies
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-5-enumerations | Section 5: Enumerations
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-6-functions-and-abilities | Section 6: Functions and Abilities
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-7-implementations | Section 7: Implementations
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-8-global-variables | Section 8: Global variables
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-9-free-code | Section 9: Free code
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-10-inline-python | Section 10: Inline python
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-11-tests | Section 11: Tests
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-12-codeblocks-and-statements | Section 12: Codeblocks and Statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-13-if-statements | Section 13: If statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-14-while-statements | Section 14: While statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-15-for-statements | Section 15: For statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-16-try-statements | Section 16: Try statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-17-match-statements | Section 17: Match statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-18-match-patterns-grammar-details | Section 18: Match patterns (Grammar Details)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-19-match-literal-patterns | Section 19: Match literal patterns
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-20-match-singleton-patterns | Section 20: Match singleton patterns
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-21-match-capture-patterns | Section 21: Match capture patterns
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-22-match-sequence-patterns | Section 22: Match sequence patterns
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-23-match-mapping-patterns | Section 23: Match mapping patterns
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-24-match-class-patterns | Section 24: Match class patterns
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-25-context-managers | Section 25: Context managers
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-26-global-and-nonlocal-statements | Section 26: Global and nonlocal statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-27-data-spatial-typed-context-blocks | Section 27: Data spatial typed context blocks
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-28-return-statements | Section 28: Return statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-29-yield-statements | Section 29: Yield statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-30-raise-statements | Section 30: Raise statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-31-assert-statements | Section 31: Assert statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-32-check-statements | Section 32: Check statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-33-delete-statements | Section 33: Delete statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-35-control-statements | Section 35: Control statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-36-data-spatial-walker-statements | Section 36: Data spatial Walker statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-37-visit-statements | Section 37: Visit statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-38-ignore-statements | Section 38: Ignore statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-39-disengage-statements | Section 39: Disengage statements
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-40-assignments | Section 40: Assignments
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-41-expressions-top-level-rule | Section 41: Expressions (Top-Level Rule)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-42-concurrent-expressions | Section 42: Concurrent expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-43-walrus-assignments | Section 43: Walrus assignments
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-44-lambda-expressions | Section 44: Lambda expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-45-pipe-expressions | Section 45: Pipe expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-46-pipe-back-expressions | Section 46: Pipe back expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-47-bitwise-expressions | Section 47: Bitwise expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-48-logical-and-compare-expressions | Section 48: Logical and compare expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-49-arithmetic-expressions | Section 49: Arithmetic expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-50-connect-expressions | Section 50: Connect expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-51-atomic-expressions-atomic-pipe-forward | Section 51: Atomic expressions (Atomic Pipe Forward :>)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-52-atomic-pipe-back-expressions | Section 52: Atomic pipe back expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-53-data-spatial-spawn-expressions | Section 53: Data spatial spawn expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-54-unpack-expressions | Section 54: Unpack expressions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-55-references-unused | Section 55: References (unused)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-56-data-spatial-calls | Section 56: Data spatial calls
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-57-subscripted-and-dotted-expressions-atomic_chain | Section 57: Subscripted and dotted expressions (atomic_chain)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-58-index-slice-details-of-the-rule | Section 58: Index slice (details of the rule)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-59-function-calls-atomic_call | Section 59: Function calls (atomic_call)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-60-atom | Section 60: Atom
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-61-multistring-and-f-string-definitions-within-atom_literal | Section 61: Multistring and F-string definitions (within atom_literal)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-62-collection-values-atom_collection | Section 62: Collection values (atom_collection)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-63-supporting-rules-for-collection-values-kv_pair-expr_list | Section 63: Supporting rules for Collection Values (kv_pair, expr_list)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-64-tuples-and-jac-tuples-tuple_list-kw_expr_list-kw_expr | Section 64: Tuples and Jac Tuples (tuple_list, kw_expr_list, kw_expr)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-65-object-spatial-references-edge_ref_chain | Section 65: Object-Spatial References (edge_ref_chain)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-66-special-comprehensions | Section 66: Special Comprehensions
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-67-names-and-references-named_ref-special_ref | Section 67: Names and references (named_ref, special_ref)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-68-builtin-types | Section 68: Builtin types
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-69-f-string-tokens | Section 69: f-string tokens
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-70-lexer-tokens-typ_-terminals-for-builtin-types | Section 70: Lexer Tokens (TYP_... terminals for builtin types)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#section-71-remaining-terminal-definitions-keywords-literals-operators-etc | Section 71: Remaining Terminal Definitions (Keywords, Literals, Operators, etc.)
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#overall-summary-of-findings | Overall Summary of Findings
https://www.jac-lang.org/internals/planning_specs/ref_roadmap#jac-grammar-documentation-analysis | Jac Grammar Documentation Analysis#

# Archetype Lifecycle Enhancement Roadmap (https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle/)
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#executive-summary | Executive Summary
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#current-state-analysis | Current State Analysis
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#critical-issues | Critical Issues
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#implementation-roadmap | Implementation Roadmap
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#phase-1-core-lifecycle-structure-approved | ✅ PHASE 1: Core Lifecycle Structure (APPROVED)
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#phase-2-event-driven-lifecycle-hooks-approved | ✅ PHASE 2: Event-Driven Lifecycle Hooks (APPROVED)
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#phase-3-global-lifecycle-hooks-approved | ✅ PHASE 3: Global Lifecycle Hooks (APPROVED)
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#phase-4-instant-visit-support-under-discussion | 🔄 PHASE 4: Instant Visit Support (UNDER DISCUSSION)
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#phase-5-concurrent-execution-support-under-discussion | 🔄 PHASE 5: Concurrent Execution Support (UNDER DISCUSSION)
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#expected-outcomes | Expected Outcomes
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#developer-productivity | Developer Productivity
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#application-architecture | Application Architecture
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#code-quality | Code Quality
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#improvements-in-development | Improvements in Development
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#risk-assessment-mitigation | Risk Assessment & Mitigation
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#high-priority-risks | High Priority Risks
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#implementation-dependencies | Implementation Dependencies
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#next-steps | Next Steps
https://www.jac-lang.org/internals/planning_specs/spawn_life_cycle#archetype-lifecycle-enhancement-roadmap | Archetype Lifecycle Enhancement Roadmap#

# Error System (https://www.jac-lang.org/internals/planning_specs/error_system/)
https://www.jac-lang.org/internals/planning_specs/error_system#1-introduction | 1. Introduction
https://www.jac-lang.org/internals/planning_specs/error_system#2-current-system-overview | 2. Current System Overview
https://www.jac-lang.org/internals/planning_specs/error_system#3-proposed-design | 3. Proposed Design
https://www.jac-lang.org/internals/planning_specs/error_system#31-error-code-enumeration-and-registry | 3.1. Error Code Enumeration and Registry
https://www.jac-lang.org/internals/planning_specs/error_system#32-enhanced-alert-structure | 3.2. Enhanced Alert Structure
https://www.jac-lang.org/internals/planning_specs/error_system#33-reporting-errorswarnings-in-passes | 3.3. Reporting Errors/Warnings in Passes
https://www.jac-lang.org/internals/planning_specs/error_system#34-mermaid-diagrams | 3.4. Mermaid Diagrams
https://www.jac-lang.org/internals/planning_specs/error_system#341-error-information-structure-class-diagram | 3.4.1. Error Information Structure (Class Diagram)
https://www.jac-lang.org/internals/planning_specs/error_system#342-error-reporting-workflow-sequence-diagram | 3.4.2. Error Reporting Workflow (Sequence Diagram)
https://www.jac-lang.org/internals/planning_specs/error_system#343-component-interaction-component-diagram | 3.4.3. Component Interaction (Component Diagram)
https://www.jac-lang.org/internals/planning_specs/error_system#4-integration-with-compiler-passes | 4. Integration with Compiler Passes
https://www.jac-lang.org/internals/planning_specs/error_system#5-benefits-of-the-new-system | 5. Benefits of the New System
https://www.jac-lang.org/internals/planning_specs/error_system#6-future-enhancements-optional | 6. Future Enhancements (Optional)
https://www.jac-lang.org/internals/planning_specs/error_system#jac-compiler-error-handling-subsystem | Jac Compiler Error Handling Subsystem#

# Formatter System (https://www.jac-lang.org/internals/planning_specs/formatter_system/)
https://www.jac-lang.org/internals/planning_specs/formatter_system#table-of-contents | Table of Contents
https://www.jac-lang.org/internals/planning_specs/formatter_system#overview-of-prettiers-architecture | Overview of Prettier's Architecture
https://www.jac-lang.org/internals/planning_specs/formatter_system#incremental-refactoring-steps | Incremental Refactoring Steps
https://www.jac-lang.org/internals/planning_specs/formatter_system#1-create-a-three-phase-pipeline-architecture | 1. Create a Three-Phase Pipeline Architecture
https://www.jac-lang.org/internals/planning_specs/formatter_system#2-implement-a-doc-builder-abstraction | 2. Implement a Doc Builder Abstraction
https://www.jac-lang.org/internals/planning_specs/formatter_system#3-refactor-ast-traversal-to-build-doc-ir | 3. Refactor AST Traversal to Build Doc IR
https://www.jac-lang.org/internals/planning_specs/formatter_system#4-implement-a-separate-printer | 4. Implement a Separate Printer
https://www.jac-lang.org/internals/planning_specs/formatter_system#5-decouple-comment-handling | 5. Decouple Comment Handling
https://www.jac-lang.org/internals/planning_specs/formatter_system#6-refactor-formatting-rules | 6. Refactor Formatting Rules
https://www.jac-lang.org/internals/planning_specs/formatter_system#7-implement-configurable-options | 7. Implement Configurable Options
https://www.jac-lang.org/internals/planning_specs/formatter_system#8-refactor-specific-node-types-incrementally | 8. Refactor Specific Node Types Incrementally
https://www.jac-lang.org/internals/planning_specs/formatter_system#9-implement-line-break-and-indentation-logic | 9. Implement Line Break and Indentation Logic
https://www.jac-lang.org/internals/planning_specs/formatter_system#10-add-tests-for-each-phase | 10. Add Tests for Each Phase
https://www.jac-lang.org/internals/planning_specs/formatter_system#challenges-and-considerations | Challenges and Considerations
https://www.jac-lang.org/internals/planning_specs/formatter_system#handling-comments | Handling Comments
https://www.jac-lang.org/internals/planning_specs/formatter_system#preserving-semantic-structure | Preserving Semantic Structure
https://www.jac-lang.org/internals/planning_specs/formatter_system#performance | Performance
https://www.jac-lang.org/internals/planning_specs/formatter_system#backward-compatibility | Backward Compatibility
https://www.jac-lang.org/internals/planning_specs/formatter_system#conclusion | Conclusion
https://www.jac-lang.org/internals/planning_specs/formatter_system#refactoring-your-formatter-to-a-prettier-style-architecture | Refactoring Your Formatter to a Prettier-Style Architecture#

# Introduction (https://www.jac-lang.org/internals/planning_specs/native_type_system/)
https://www.jac-lang.org/internals/planning_specs/native_type_system#overview | Overview
https://www.jac-lang.org/internals/planning_specs/native_type_system#key-features | Key Features
https://www.jac-lang.org/internals/planning_specs/native_type_system#documentation-structure | Documentation Structure

# Architecture (https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture/)
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#core-components | Core Components
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#type-representations | Type Representations
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#type-environment | Type Environment
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#type-resolver | Type Resolver
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#type-checker | Type Checker
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#type-inferencer | Type Inferencer
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#compiler-integration | Compiler Integration
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#error-handling | Error Handling
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#design-principles | Design Principles
https://www.jac-lang.org/internals/planning_specs/native_type_system/architecture#type-system-architecture | Type System Architecture#

# Type Representation (https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation/)
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#from-strings-to-objects | From Strings to Objects
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#the-type-hierarchy | The Type Hierarchy
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#core-type-classes | Core Type Classes
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#primitivetype | PrimitiveType
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#archetypetype | ArchetypeType
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#callabletype | CallableType
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#container-types | Container Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#type-operators | Type Operators
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#special-types | Special Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#type-operations | Type Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#type-equivalence | Type Equivalence
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#subtyping-relationships | Subtyping Relationships
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#singletons-for-common-types | Singletons for Common Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#integration-with-ast | Integration with AST
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#string-representation | String Representation
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#example-complex-type-representation | Example: Complex Type Representation
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_representation#type-representation | Type Representation#

# Type Resolution (https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution/)
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#the-resolution-process | The Resolution Process
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#the-type-resolver | The Type Resolver
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#sources-of-type-information | Sources of Type Information
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#resolution-logic | Resolution Logic
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#simple-name-resolution | Simple Name Resolution
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#generic-type-resolution | Generic Type Resolution
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#union-type-resolution | Union Type Resolution
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#callable-type-resolution | Callable Type Resolution
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#handling-archetypes | Handling Archetypes
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#qualified-name-resolution | Qualified Name Resolution
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#type-resolution-caching | Type Resolution Caching
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#error-handling | Error Handling
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#integration-with-compiler-passes | Integration with Compiler Passes
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#example-resolution-flow | Example Resolution Flow
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_resolution#type-resolution | Type Resolution#

# Type Rules (https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules/)
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#introduction-to-type-rules | Introduction to Type Rules
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#notation | Notation
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#core-rules | Core Rules
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#literals | Literals
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#variables | Variables
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#assignment | Assignment
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#binary-operations | Binary Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#arithmetic-operations | Arithmetic Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#string-concatenation | String Concatenation
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#comparison-operations | Comparison Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#logical-operations | Logical Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#functionability-calls | Function/Ability Calls
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#member-access | Member Access
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#control-flow | Control Flow
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#if-statementexpression | If Statement/Expression
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#for-loop | For Loop
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#jac-specific-rules | Jac-Specific Rules
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#archetypes-and-inheritance | Archetypes and Inheritance
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#walker-rules | Walker Rules
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#nodeedge-creation | Node/Edge Creation
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#graph-operations | Graph Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#container-types | Container Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#list-operations | List Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#dictionary-operations | Dictionary Operations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#variance-rules | Variance Rules
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#for-container-types | For Container Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#for-function-types | For Function Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#error-reporting | Error Reporting
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#type-compatibility-matrix | Type Compatibility Matrix
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_rules#type-rules | Type Rules#

# Type Inference (https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference/)
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#motivation | Motivation
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#basic-principles | Basic Principles
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#inference-mechanisms | Inference Mechanisms
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#initialization-inference | Initialization Inference
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#contextual-inference | Contextual Inference
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#flow-sensitive-inference | Flow-sensitive Inference
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#return-type-inference | Return Type Inference
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#the-inference-algorithm | The Inference Algorithm
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#1-collection-phase | 1. Collection Phase
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#2-constraint-generation-phase | 2. Constraint Generation Phase
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#3-constraint-solving-phase | 3. Constraint Solving Phase
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#4-type-application-phase | 4. Type Application Phase
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#handling-special-cases | Handling Special Cases
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#type-inference-for-containers | Type Inference for Containers
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#generic-function-type-inference | Generic Function Type Inference
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#inference-with-union-types | Inference with Union Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#bidirectional-type-checking | Bidirectional Type Checking
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#handling-ambiguity | Handling Ambiguity
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#interaction-with-gradual-typing | Interaction with Gradual Typing
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#error-handling-in-type-inference | Error Handling in Type Inference
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#performance-considerations | Performance Considerations
https://www.jac-lang.org/internals/planning_specs/native_type_system/type_inference#type-inference | Type Inference#

# Compiler Integration (https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration/)
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#overview | Overview
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#compiler-passes-for-type-system | Compiler Passes for Type System
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#1-typeannotationresolvepass | 1. TypeAnnotationResolvePass
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#2-typeinferencepass | 2. TypeInferencePass
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#3-typeconstraintpass | 3. TypeConstraintPass
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#4-typecheckpass | 4. TypeCheckPass
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#integration-with-symbol-tables | Integration with Symbol Tables
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#replacing-mypy-integration | Replacing MyPy Integration
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#integration-with-error-reporting | Integration with Error Reporting
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#integration-with-runtime-type-information | Integration with Runtime Type Information
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#extension-points | Extension Points
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#performance-considerations | Performance Considerations
https://www.jac-lang.org/internals/planning_specs/native_type_system/compiler_integration#compiler-integration | Compiler Integration#

# Let's Build (https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build/)
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#table-of-contents | Table of Contents
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#introduction | Introduction
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#system-overview | System Overview
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#project-structure | Project Structure
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#core-components | Core Components
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-model | Type Model
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#implementation-of-the-base-type-class | Implementation of the Base Type Class
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#implementation-of-archetype-and-instance-types | Implementation of Archetype and Instance Types
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-factory | Type Factory
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#implementation-of-type-factory | Implementation of Type Factory
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-cache | Type Cache
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-relationships | Type Relationships
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#implementation-of-type-relationships-for-jac | Implementation of Type Relationships for Jac
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-narrowing | Type Narrowing
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#implementation-of-type-narrowing-for-jac | Implementation of Type Narrowing for Jac
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#flow-and-integration | Flow and Integration
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-checking-process-for-jac | Type Checking Process for Jac
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#implementation-of-the-main-type-checking-pass-for-jac | Implementation of the Main Type Checking Pass for Jac
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#parser-integration-for-jac | Parser Integration for Jac
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#jac-type-evaluator-implementation | Jac Type Evaluator Implementation
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#implementation-guide | Implementation Guide
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#getting-started | Getting Started
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#key-algorithms | Key Algorithms
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#subtyping-algorithm | Subtyping Algorithm
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-narrowing-with-flow-sensitivity | Type Narrowing with Flow Sensitivity
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#testing-strategy | Testing Strategy
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#comparison-with-other-type-checkers | Comparison with Other Type Checkers
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#conclusion | Conclusion
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#advanced-features | Advanced Features
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#protocol-support-structural-typing-for-jac | Protocol Support (Structural Typing) for Jac
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#type-guards-in-jac | Type Guards in Jac
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#jac-abilityfunction-type-inference | Jac Ability/Function Type Inference
https://www.jac-lang.org/internals/planning_specs/native_type_system/lets_build#jac-type-checker-architecture-a-pyright-inspired-approach | Jac Type Checker Architecture: A Pyright-Inspired Approach#

# Bigfeatures (https://www.jac-lang.org/learn/bigfeatures/)
https://www.jac-lang.org/learn/bigfeatures#one-language-for-frontend-js-and-backend-py | One Language for Frontend (JS) and Backend (PY)
https://www.jac-lang.org/learn/bigfeatures#zero-to-native-code-as-fast-as-rust | Zero to Native Code as fast as Rust

# Research (https://www.jac-lang.org/learn/research/)
https://www.jac-lang.org/learn/research#object-spatial-programming-makes-pytorchtriton-look-slow | Object-Spatial Programming Makes Pytorch/Triton Look Slow
https://www.jac-lang.org/learn/research#object-spatial-programming-make-pim-general-purpose | Object-Spatial Programming Make PIM General Purpose
https://www.jac-lang.org/learn/research#object-spatial-programming-makes-database-schemas-a-dynamic-optimization-ir | Object-Spatial Programming Makes Database Schema's A Dynamic Optimization IR
